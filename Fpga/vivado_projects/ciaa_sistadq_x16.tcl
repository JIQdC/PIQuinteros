#*****************************************************************************************
# Vivado (TM) v2020.2 (64-bit)
#
# ciaa_sistadq_x16.tcl: Tcl script for re-creating project 'CIAA_SistAdq_x16'
#
# Generated by Vivado on Fri Nov 04 02:01:06 -03 2022
# IP Build 3064653 on Wed Nov 18 14:17:31 MST 2020
#
# This file contains the Vivado Tcl commands for re-creating the project to the state*
# when this script was generated. In order to re-create the project, please source this
# file in the Vivado Tcl Shell.
#
# * Note that the runs in the created project will be configured the same way as the
#   original project, however they will not be launched automatically. To regenerate the
#   run results please launch the synthesis/implementation runs as needed.
#
#*****************************************************************************************
# NOTE: In order to use this script for source control purposes, please make sure that the
#       following files are added to the source control system:-
#
# 1. This project restoration tcl script (ciaa_sistadq_x16.tcl) that was generated.
#
# 2. The following source(s) files that were local or imported into the original project.
#    (Please see the '$orig_proj_dir' and '$origin_dir' variable setting below at the start of the script)
#
#    <none>
#
# 3. The following remote source files that were added to the original project:-
#
#    "/run/media/fran/46FAA90DFAA8FA77/Ventanas/IB/PI/GitHub/PIQuinteros/Fpga/src/hdl/pin_control.vhd"
#    "/run/media/fran/46FAA90DFAA8FA77/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/src/dsp/dsp_dds_compiler_controller.vhd"
#    "/run/media/fran/46FAA90DFAA8FA77/Ventanas/IB/PI/GitHub/PIQuinteros/Fpga/src/hdl/complex_conjugator.vhd"
#    "/run/media/fran/46FAA90DFAA8FA77/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/src/dsp/dsp_complex_gain.vhd"
#    "/run/media/fran/46FAA90DFAA8FA77/Ventanas/IB/PI/GitHub/PIQuinteros/Fpga/src/hdl/axi_joiner.vhd"
#    "/run/media/fran/46FAA90DFAA8FA77/Ventanas/IB/PI/GitHub/PIQuinteros/Fpga/src/hdl/beam_mux_fsm.vhd"
#    "/run/media/fran/46FAA90DFAA8FA77/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/src/helpers/zero_padder.vhd"
#    "/run/media/fran/46FAA90DFAA8FA77/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/src/helpers/basic_counter.vhd"
#    "/run/media/fran/46FAA90DFAA8FA77/Ventanas/IB/PI/GitHub/PIQuinteros/Fpga/src/hdl/copy_vector_N_times.vhd"
#    "/run/media/fran/46FAA90DFAA8FA77/Ventanas/IB/PI/GitHub/PIQuinteros/Fpga/src/hdl/data_source_mux_generic.vhd"
#    "/run/media/fran/46FAA90DFAA8FA77/Ventanas/IB/PI/GitHub/PIQuinteros/Fpga/src/ip/fifo_generator/fifo_generator.xci"
#    "/run/media/fran/46FAA90DFAA8FA77/Ventanas/IB/PI/GitHub/PIQuinteros/Fpga/src/ip/c_counter_binary/c_counter_binary.xci"
#    "/run/media/fran/46FAA90DFAA8FA77/Ventanas/IB/PI/GitHub/PIQuinteros/Fpga/src/ip/clk_wiz_preproc/clk_wiz_preproc.xci"
#    "/run/media/fran/46FAA90DFAA8FA77/Ventanas/IB/PI/GitHub/PIQuinteros/Fpga/src/hdl/fifo_record_pkg.vhd"
#    "/run/media/fran/46FAA90DFAA8FA77/Ventanas/IB/PI/GitHub/PIQuinteros/Fpga/src/hdl/adc_receiver_def_pkg.vhd"
#    "/run/media/fran/46FAA90DFAA8FA77/Ventanas/IB/PI/GitHub/PIQuinteros/Fpga/src/hdl/data_control.vhd"
#    "/run/media/fran/46FAA90DFAA8FA77/Ventanas/IB/PI/GitHub/PIQuinteros/Fpga/src/hdl/axi_16_reg_block.vhd"
#    "/run/media/fran/46FAA90DFAA8FA77/Ventanas/IB/PI/GitHub/PIQuinteros/Fpga/src/hdl/idelay_wrapper.vhd"
#    "/run/media/fran/46FAA90DFAA8FA77/Ventanas/IB/PI/GitHub/PIQuinteros/Fpga/src/hdl/deserializer.vhd"
#    "/run/media/fran/46FAA90DFAA8FA77/Ventanas/IB/PI/GitHub/PIQuinteros/Fpga/src/hdl/adc_receiver.vhd"
#    "/run/media/fran/46FAA90DFAA8FA77/Ventanas/IB/PI/GitHub/PIQuinteros/Fpga/src/hdl/pulse_sync.vhd"
#    "/run/media/fran/46FAA90DFAA8FA77/Ventanas/IB/PI/GitHub/PIQuinteros/Fpga/src/hdl/quasistatic_sync.vhd"
#    "/run/media/fran/46FAA90DFAA8FA77/Ventanas/IB/PI/GitHub/PIQuinteros/Fpga/src/hdl/vector_valid_sync.vhd"
#    "/run/media/fran/46FAA90DFAA8FA77/Ventanas/IB/PI/GitHub/PIQuinteros/Fpga/src/hdl/level_sync.vhd"
#    "/run/media/fran/46FAA90DFAA8FA77/Ventanas/IB/PI/GitHub/PIQuinteros/Fpga/src/hdl/sampler_with_ce.vhd"
#    "/run/media/fran/46FAA90DFAA8FA77/Ventanas/IB/PI/GitHub/PIQuinteros/Fpga/src/hdl/debug_control.vhd"
#    "/run/media/fran/46FAA90DFAA8FA77/Ventanas/IB/PI/GitHub/PIQuinteros/Fpga/src/hdl/preprocessing.vhd"
#    "/run/media/fran/46FAA90DFAA8FA77/Ventanas/IB/PI/GitHub/PIQuinteros/Fpga/src/hdl/beam_sel_mux.vhd"
#    "/run/media/fran/46FAA90DFAA8FA77/Ventanas/IB/PI/GitHub/PIQuinteros/Fpga/src/hdl/fifo_input_data_mux.vhd"
#    "/run/media/fran/46FAA90DFAA8FA77/Ventanas/IB/PI/GitHub/PIQuinteros/Fpga/src/hdl/data_handler.vhd"
#    "/run/media/fran/46FAA90DFAA8FA77/Ventanas/IB/PI/GitHub/PIQuinteros/Fpga/src/hdl/adc_control_wrapper.vhd"
#    "/run/media/fran/46FAA90DFAA8FA77/Ventanas/IB/PI/GitHub/PIQuinteros/Fpga/src/hdl/delay_control.vhd"
#    "/run/media/fran/46FAA90DFAA8FA77/Ventanas/IB/PI/GitHub/PIQuinteros/Fpga/src/hdl/ps_axi_spi_bd_wrapper.vhd"
#    "/run/media/fran/46FAA90DFAA8FA77/Ventanas/IB/PI/GitHub/PIQuinteros/Fpga/src/hdl/SistAdq_top.vhd"
#    "/run/media/fran/46FAA90DFAA8FA77/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/src/helpers/complex_splitter.vhd"
#    "/run/media/fran/46FAA90DFAA8FA77/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/src/dsp/dsp_data_source_mux.vhd"
#    "/run/media/fran/46FAA90DFAA8FA77/Ventanas/IB/PI/GitHub/PIQuinteros/Fpga/src/hdl/crc_32.vhd"
#    "/run/media/fran/46FAA90DFAA8FA77/Ventanas/IB/PI/GitHub/PIQuinteros/Fpga/src/hdl/downsampler.vhd"
#    "/run/media/fran/46FAA90DFAA8FA77/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/src/helpers/resizer.vhd"
#    "/run/media/fran/46FAA90DFAA8FA77/Ventanas/IB/PI/GitHub/PIQuinteros/Fpga/src/hdl/splitter.vhd"
#    "/run/media/fran/46FAA90DFAA8FA77/Ventanas/IB/PI/GitHub/PIQuinteros/Fpga/src/ip/ch_mixer/ch_mixer/ch_mixer.xci"
#    "/run/media/fran/46FAA90DFAA8FA77/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/src/helpers/cdc_two_ff_sync.vhd"
#    "/run/media/fran/46FAA90DFAA8FA77/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/src/helpers/valid_data_holder.vhd"
#    "/run/media/fran/46FAA90DFAA8FA77/Ventanas/IB/PI/GitHub/PIQuinteros/Fpga/src/ip/counter_32_bits/counter_32_bits/counter_32_bits.xci"
#    "/run/media/fran/46FAA90DFAA8FA77/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/src/helpers/cdc_comparator.vhd"
#    "/run/media/fran/46FAA90DFAA8FA77/Ventanas/IB/PI/GitHub/PIQuinteros/Fpga/src/hdl/downsampler_control.vhd"
#    "/run/media/fran/46FAA90DFAA8FA77/Ventanas/IB/PI/GitHub/PIQuinteros/Fpga/src/hdl/downsampler_tresh.vhd"
#    "/run/media/fran/46FAA90DFAA8FA77/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/src/helpers/subarray_creator.vhd"
#    "/run/media/fran/46FAA90DFAA8FA77/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/filters/lowpass.coe"
#    "/run/media/fran/46FAA90DFAA8FA77/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/filters/bandpass.coe"
#    "/run/media/fran/46FAA90DFAA8FA77/Ventanas/IB/PI/GitHub/PIQuinteros/Fpga/src/constraints/ciaa_acc_SistAdq_ADC.xdc"
#    "/run/media/fran/46FAA90DFAA8FA77/Ventanas/IB/PI/GitHub/PIQuinteros/Fpga/src/constraints/ciaa_acc_SistAdq_general.xdc"
#    "/run/media/fran/46FAA90DFAA8FA77/Ventanas/IB/PI/GitHub/PIQuinteros/Fpga/src/constraints/ciaa_acc_SistAdq_timing.xdc"
#    "/run/media/fran/46FAA90DFAA8FA77/Ventanas/IB/PI/GitHub/PIQuinteros/Fpga/sim/adc_model/adc_model.vhd"
#    "/run/media/fran/46FAA90DFAA8FA77/Ventanas/IB/PI/GitHub/PIQuinteros/Fpga/sim/tb_clk.vhd"
#    "/run/media/fran/46FAA90DFAA8FA77/Ventanas/IB/PI/GitHub/PIQuinteros/Fpga/sim/adc_model/w1w2WordToggle.vhd"
#    "/run/media/fran/46FAA90DFAA8FA77/Ventanas/IB/PI/GitHub/PIQuinteros/Fpga/sim/adc_model/contNbits.vhd"
#    "/run/media/fran/46FAA90DFAA8FA77/Ventanas/IB/PI/GitHub/PIQuinteros/Fpga/sim/adc_model/adc_model_wrapper.vhd"
#    "/run/media/fran/46FAA90DFAA8FA77/Ventanas/IB/PI/GitHub/PIQuinteros/Fpga/sim/test_deser.vhd"
#    "/run/media/fran/46FAA90DFAA8FA77/Ventanas/IB/PI/GitHub/PIQuinteros/Fpga/sim/test_adc_model_wrapper.vhd"
#    "/run/media/fran/46FAA90DFAA8FA77/Ventanas/IB/PI/GitHub/PIQuinteros/Fpga/sim/test_downsampler.vhd"
#    "/run/media/fran/46FAA90DFAA8FA77/Ventanas/IB/PI/GitHub/PIQuinteros/Fpga/sim/test_selectio.vhd"
#    "/run/media/fran/46FAA90DFAA8FA77/Ventanas/IB/PI/GitHub/PIQuinteros/Fpga/sim/test_fifo.vhd"
#
#*****************************************************************************************

# Check file required for this script exists
proc checkRequiredFiles { origin_dir} {
  set status true
  set files [list \
   "/run/media/fran/46FAA90DFAA8FA77/Ventanas/IB/PI/GitHub/PIQuinteros/Fpga/src/hdl/pin_control.vhd" \
   "/run/media/fran/46FAA90DFAA8FA77/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/src/dsp/dsp_dds_compiler_controller.vhd" \
   "/run/media/fran/46FAA90DFAA8FA77/Ventanas/IB/PI/GitHub/PIQuinteros/Fpga/src/hdl/complex_conjugator.vhd" \
   "/run/media/fran/46FAA90DFAA8FA77/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/src/dsp/dsp_complex_gain.vhd" \
   "/run/media/fran/46FAA90DFAA8FA77/Ventanas/IB/PI/GitHub/PIQuinteros/Fpga/src/hdl/axi_joiner.vhd" \
   "/run/media/fran/46FAA90DFAA8FA77/Ventanas/IB/PI/GitHub/PIQuinteros/Fpga/src/hdl/beam_mux_fsm.vhd" \
   "/run/media/fran/46FAA90DFAA8FA77/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/src/helpers/zero_padder.vhd" \
   "/run/media/fran/46FAA90DFAA8FA77/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/src/helpers/basic_counter.vhd" \
   "/run/media/fran/46FAA90DFAA8FA77/Ventanas/IB/PI/GitHub/PIQuinteros/Fpga/src/hdl/copy_vector_N_times.vhd" \
   "/run/media/fran/46FAA90DFAA8FA77/Ventanas/IB/PI/GitHub/PIQuinteros/Fpga/src/hdl/data_source_mux_generic.vhd" \
   "/run/media/fran/46FAA90DFAA8FA77/Ventanas/IB/PI/GitHub/PIQuinteros/Fpga/src/ip/fifo_generator/fifo_generator.xci" \
   "/run/media/fran/46FAA90DFAA8FA77/Ventanas/IB/PI/GitHub/PIQuinteros/Fpga/src/ip/c_counter_binary/c_counter_binary.xci" \
   "/run/media/fran/46FAA90DFAA8FA77/Ventanas/IB/PI/GitHub/PIQuinteros/Fpga/src/ip/clk_wiz_preproc/clk_wiz_preproc.xci" \
   "/run/media/fran/46FAA90DFAA8FA77/Ventanas/IB/PI/GitHub/PIQuinteros/Fpga/src/hdl/fifo_record_pkg.vhd" \
   "/run/media/fran/46FAA90DFAA8FA77/Ventanas/IB/PI/GitHub/PIQuinteros/Fpga/src/hdl/adc_receiver_def_pkg.vhd" \
   "/run/media/fran/46FAA90DFAA8FA77/Ventanas/IB/PI/GitHub/PIQuinteros/Fpga/src/hdl/data_control.vhd" \
   "/run/media/fran/46FAA90DFAA8FA77/Ventanas/IB/PI/GitHub/PIQuinteros/Fpga/src/hdl/axi_16_reg_block.vhd" \
   "/run/media/fran/46FAA90DFAA8FA77/Ventanas/IB/PI/GitHub/PIQuinteros/Fpga/src/hdl/idelay_wrapper.vhd" \
   "/run/media/fran/46FAA90DFAA8FA77/Ventanas/IB/PI/GitHub/PIQuinteros/Fpga/src/hdl/deserializer.vhd" \
   "/run/media/fran/46FAA90DFAA8FA77/Ventanas/IB/PI/GitHub/PIQuinteros/Fpga/src/hdl/adc_receiver.vhd" \
   "/run/media/fran/46FAA90DFAA8FA77/Ventanas/IB/PI/GitHub/PIQuinteros/Fpga/src/hdl/pulse_sync.vhd" \
   "/run/media/fran/46FAA90DFAA8FA77/Ventanas/IB/PI/GitHub/PIQuinteros/Fpga/src/hdl/quasistatic_sync.vhd" \
   "/run/media/fran/46FAA90DFAA8FA77/Ventanas/IB/PI/GitHub/PIQuinteros/Fpga/src/hdl/vector_valid_sync.vhd" \
   "/run/media/fran/46FAA90DFAA8FA77/Ventanas/IB/PI/GitHub/PIQuinteros/Fpga/src/hdl/level_sync.vhd" \
   "/run/media/fran/46FAA90DFAA8FA77/Ventanas/IB/PI/GitHub/PIQuinteros/Fpga/src/hdl/sampler_with_ce.vhd" \
   "/run/media/fran/46FAA90DFAA8FA77/Ventanas/IB/PI/GitHub/PIQuinteros/Fpga/src/hdl/debug_control.vhd" \
   "/run/media/fran/46FAA90DFAA8FA77/Ventanas/IB/PI/GitHub/PIQuinteros/Fpga/src/hdl/preprocessing.vhd" \
   "/run/media/fran/46FAA90DFAA8FA77/Ventanas/IB/PI/GitHub/PIQuinteros/Fpga/src/hdl/beam_sel_mux.vhd" \
   "/run/media/fran/46FAA90DFAA8FA77/Ventanas/IB/PI/GitHub/PIQuinteros/Fpga/src/hdl/fifo_input_data_mux.vhd" \
   "/run/media/fran/46FAA90DFAA8FA77/Ventanas/IB/PI/GitHub/PIQuinteros/Fpga/src/hdl/data_handler.vhd" \
   "/run/media/fran/46FAA90DFAA8FA77/Ventanas/IB/PI/GitHub/PIQuinteros/Fpga/src/hdl/adc_control_wrapper.vhd" \
   "/run/media/fran/46FAA90DFAA8FA77/Ventanas/IB/PI/GitHub/PIQuinteros/Fpga/src/hdl/delay_control.vhd" \
   "/run/media/fran/46FAA90DFAA8FA77/Ventanas/IB/PI/GitHub/PIQuinteros/Fpga/src/hdl/ps_axi_spi_bd_wrapper.vhd" \
   "/run/media/fran/46FAA90DFAA8FA77/Ventanas/IB/PI/GitHub/PIQuinteros/Fpga/src/hdl/SistAdq_top.vhd" \
   "/run/media/fran/46FAA90DFAA8FA77/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/src/helpers/complex_splitter.vhd" \
   "/run/media/fran/46FAA90DFAA8FA77/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/src/dsp/dsp_data_source_mux.vhd" \
   "/run/media/fran/46FAA90DFAA8FA77/Ventanas/IB/PI/GitHub/PIQuinteros/Fpga/src/hdl/crc_32.vhd" \
   "/run/media/fran/46FAA90DFAA8FA77/Ventanas/IB/PI/GitHub/PIQuinteros/Fpga/src/hdl/downsampler.vhd" \
   "/run/media/fran/46FAA90DFAA8FA77/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/src/helpers/resizer.vhd" \
   "/run/media/fran/46FAA90DFAA8FA77/Ventanas/IB/PI/GitHub/PIQuinteros/Fpga/src/hdl/splitter.vhd" \
   "/run/media/fran/46FAA90DFAA8FA77/Ventanas/IB/PI/GitHub/PIQuinteros/Fpga/src/ip/ch_mixer/ch_mixer/ch_mixer.xci" \
   "/run/media/fran/46FAA90DFAA8FA77/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/src/helpers/cdc_two_ff_sync.vhd" \
   "/run/media/fran/46FAA90DFAA8FA77/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/src/helpers/valid_data_holder.vhd" \
   "/run/media/fran/46FAA90DFAA8FA77/Ventanas/IB/PI/GitHub/PIQuinteros/Fpga/src/ip/counter_32_bits/counter_32_bits/counter_32_bits.xci" \
   "/run/media/fran/46FAA90DFAA8FA77/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/src/helpers/cdc_comparator.vhd" \
   "/run/media/fran/46FAA90DFAA8FA77/Ventanas/IB/PI/GitHub/PIQuinteros/Fpga/src/hdl/downsampler_control.vhd" \
   "/run/media/fran/46FAA90DFAA8FA77/Ventanas/IB/PI/GitHub/PIQuinteros/Fpga/src/hdl/downsampler_tresh.vhd" \
   "/run/media/fran/46FAA90DFAA8FA77/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/src/helpers/subarray_creator.vhd" \
   "/run/media/fran/46FAA90DFAA8FA77/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/filters/lowpass.coe" \
   "/run/media/fran/46FAA90DFAA8FA77/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/filters/bandpass.coe" \
   "/run/media/fran/46FAA90DFAA8FA77/Ventanas/IB/PI/GitHub/PIQuinteros/Fpga/src/constraints/ciaa_acc_SistAdq_ADC.xdc" \
   "/run/media/fran/46FAA90DFAA8FA77/Ventanas/IB/PI/GitHub/PIQuinteros/Fpga/src/constraints/ciaa_acc_SistAdq_general.xdc" \
   "/run/media/fran/46FAA90DFAA8FA77/Ventanas/IB/PI/GitHub/PIQuinteros/Fpga/src/constraints/ciaa_acc_SistAdq_timing.xdc" \
   "/run/media/fran/46FAA90DFAA8FA77/Ventanas/IB/PI/GitHub/PIQuinteros/Fpga/sim/adc_model/adc_model.vhd" \
   "/run/media/fran/46FAA90DFAA8FA77/Ventanas/IB/PI/GitHub/PIQuinteros/Fpga/sim/tb_clk.vhd" \
   "/run/media/fran/46FAA90DFAA8FA77/Ventanas/IB/PI/GitHub/PIQuinteros/Fpga/sim/adc_model/w1w2WordToggle.vhd" \
   "/run/media/fran/46FAA90DFAA8FA77/Ventanas/IB/PI/GitHub/PIQuinteros/Fpga/sim/adc_model/contNbits.vhd" \
   "/run/media/fran/46FAA90DFAA8FA77/Ventanas/IB/PI/GitHub/PIQuinteros/Fpga/sim/adc_model/adc_model_wrapper.vhd" \
   "/run/media/fran/46FAA90DFAA8FA77/Ventanas/IB/PI/GitHub/PIQuinteros/Fpga/sim/test_deser.vhd" \
   "/run/media/fran/46FAA90DFAA8FA77/Ventanas/IB/PI/GitHub/PIQuinteros/Fpga/sim/test_adc_model_wrapper.vhd" \
   "/run/media/fran/46FAA90DFAA8FA77/Ventanas/IB/PI/GitHub/PIQuinteros/Fpga/sim/test_downsampler.vhd" \
   "/run/media/fran/46FAA90DFAA8FA77/Ventanas/IB/PI/GitHub/PIQuinteros/Fpga/sim/test_selectio.vhd" \
   "/run/media/fran/46FAA90DFAA8FA77/Ventanas/IB/PI/GitHub/PIQuinteros/Fpga/sim/test_fifo.vhd" \
  ]
  foreach ifile $files {
    if { ![file isfile $ifile] } {
      puts " Could not find remote file $ifile "
      set status false
    }
  }

  set paths [list \
   [file normalize "$origin_dir/ip_repo/axi_16_block_re_1.0"] \
   [file normalize "$origin_dir/ip_repo/axi_32_reg_block_1.0"] \
   [file normalize "$origin_dir/ip_repo/axi_sixteen_reg_block_1.0"] \
   [file normalize "$origin_dir/../src/ip"] \
  ]
  foreach ipath $paths {
    if { ![file isdirectory $ipath] } {
      puts " Could not access $ipath "
      set status false
    }
  }

  return $status
}
# Set the reference directory for source file relative paths (by default the value is script directory path)
set origin_dir "."

# Use origin directory path location variable, if specified in the tcl shell
if { [info exists ::origin_dir_loc] } {
  set origin_dir $::origin_dir_loc
}

# Set the project name
set _xil_proj_name_ "CIAA_SistAdq_x16"

# Use project name variable, if specified in the tcl shell
if { [info exists ::user_project_name] } {
  set _xil_proj_name_ $::user_project_name
}

variable script_file
set script_file "ciaa_sistadq_x16.tcl"

# Help information for this script
proc print_help {} {
  variable script_file
  puts "\nDescription:"
  puts "Recreate a Vivado project from this script. The created project will be"
  puts "functionally equivalent to the original project for which this script was"
  puts "generated. The script contains commands for creating a project, filesets,"
  puts "runs, adding/importing sources and setting properties on various objects.\n"
  puts "Syntax:"
  puts "$script_file"
  puts "$script_file -tclargs \[--origin_dir <path>\]"
  puts "$script_file -tclargs \[--project_name <name>\]"
  puts "$script_file -tclargs \[--help\]\n"
  puts "Usage:"
  puts "Name                   Description"
  puts "-------------------------------------------------------------------------"
  puts "\[--origin_dir <path>\]  Determine source file paths wrt this path. Default"
  puts "                       origin_dir path value is \".\", otherwise, the value"
  puts "                       that was set with the \"-paths_relative_to\" switch"
  puts "                       when this script was generated.\n"
  puts "\[--project_name <name>\] Create project with the specified name. Default"
  puts "                       name is the name of the project from where this"
  puts "                       script was generated.\n"
  puts "\[--help\]               Print help information for this script"
  puts "-------------------------------------------------------------------------\n"
  exit 0
}

if { $::argc > 0 } {
  for {set i 0} {$i < $::argc} {incr i} {
    set option [string trim [lindex $::argv $i]]
    switch -regexp -- $option {
      "--origin_dir"   { incr i; set origin_dir [lindex $::argv $i] }
      "--project_name" { incr i; set _xil_proj_name_ [lindex $::argv $i] }
      "--help"         { print_help }
      default {
        if { [regexp {^-} $option] } {
          puts "ERROR: Unknown option '$option' specified, please type '$script_file -tclargs --help' for usage info.\n"
          return 1
        }
      }
    }
  }
}

# Set the directory path for the original project from where this script was exported
set orig_proj_dir "[file normalize "$origin_dir/ciaa_sistadq_x16_proj"]"

# Check for paths and files needed for project creation
set validate_required 0
if { $validate_required } {
  if { [checkRequiredFiles $origin_dir] } {
    puts "Tcl file $script_file is valid. All files required for project creation is accesable. "
  } else {
    puts "Tcl file $script_file is not valid. Not all files required for project creation is accesable. "
    return
  }
}

# Create project
create_project ${_xil_proj_name_} "ciaa_sistadq_x16_proj" -part xc7z030fbg676-2

# Set the directory path for the new project
set proj_dir [get_property directory [current_project]]

# Set project properties
set obj [current_project]
set_property -name "board_part" -value "www.proyecto-ciaa.com.ar:ciaa-acc:part0:1.0" -objects $obj
set_property -name "corecontainer.enable" -value "1" -objects $obj
set_property -name "default_lib" -value "xil_defaultlib" -objects $obj
set_property -name "enable_core_container" -value "1" -objects $obj
set_property -name "enable_vhdl_2008" -value "1" -objects $obj
set_property -name "ip_cache_permissions" -value "read write" -objects $obj
set_property -name "ip_output_repo" -value "$proj_dir/${_xil_proj_name_}.cache/ip" -objects $obj
set_property -name "mem.enable_memory_map_generation" -value "1" -objects $obj
set_property -name "platform.board_id" -value "ciaa-acc" -objects $obj
set_property -name "platform.description" -value "Vivado generated DSA" -objects $obj
set_property -name "platform.emu_dir" -value "emu" -objects $obj
set_property -name "sim.central_dir" -value "$proj_dir/${_xil_proj_name_}.ip_user_files" -objects $obj
set_property -name "sim.ip.auto_export_scripts" -value "1" -objects $obj
set_property -name "simulator_language" -value "Mixed" -objects $obj
set_property -name "target_language" -value "VHDL" -objects $obj
set_property -name "webtalk.activehdl_export_sim" -value "57" -objects $obj
set_property -name "webtalk.ies_export_sim" -value "57" -objects $obj
set_property -name "webtalk.modelsim_export_sim" -value "57" -objects $obj
set_property -name "webtalk.questa_export_sim" -value "57" -objects $obj
set_property -name "webtalk.riviera_export_sim" -value "57" -objects $obj
set_property -name "webtalk.vcs_export_sim" -value "57" -objects $obj
set_property -name "webtalk.xsim_export_sim" -value "57" -objects $obj
set_property -name "webtalk.xsim_launch_sim" -value "9" -objects $obj
set_property -name "xpm_libraries" -value "XPM_CDC XPM_FIFO XPM_MEMORY" -objects $obj

# Create 'sources_1' fileset (if not found)
if {[string equal [get_filesets -quiet sources_1] ""]} {
  create_fileset -srcset sources_1
}

# Set IP repository paths
set obj [get_filesets sources_1]
if { $obj != {} } {
   set_property "ip_repo_paths" "[file normalize "$origin_dir/ip_repo/axi_16_block_re_1.0"] [file normalize "$origin_dir/ip_repo/axi_32_reg_block_1.0"] [file normalize "$origin_dir/ip_repo/axi_sixteen_reg_block_1.0"] [file normalize "$origin_dir/../src/ip"]" $obj

   # Rebuild user ip_repo's index before adding any source files
   update_ip_catalog -rebuild
}

# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
set files [list \
 [file normalize "${origin_dir}/../src/hdl/pin_control.vhd"] \
 [file normalize "${origin_dir}/../../../Fpga/prj/preprocessing_stage/src/dsp/dsp_dds_compiler_controller.vhd"] \
 [file normalize "${origin_dir}/../src/hdl/complex_conjugator.vhd"] \
 [file normalize "${origin_dir}/../../../Fpga/prj/preprocessing_stage/src/dsp/dsp_complex_gain.vhd"] \
 [file normalize "${origin_dir}/../src/hdl/axi_joiner.vhd"] \
 [file normalize "${origin_dir}/../src/hdl/beam_mux_fsm.vhd"] \
 [file normalize "${origin_dir}/../../../Fpga/prj/preprocessing_stage/src/helpers/zero_padder.vhd"] \
 [file normalize "${origin_dir}/../../../Fpga/prj/preprocessing_stage/src/helpers/basic_counter.vhd"] \
 [file normalize "${origin_dir}/../src/hdl/copy_vector_N_times.vhd"] \
 [file normalize "${origin_dir}/../src/hdl/data_source_mux_generic.vhd"] \
 [file normalize "${origin_dir}/../src/ip/fifo_generator/fifo_generator.xci"] \
 [file normalize "${origin_dir}/../src/ip/c_counter_binary/c_counter_binary.xci"] \
 [file normalize "${origin_dir}/../src/ip/clk_wiz_preproc/clk_wiz_preproc.xci"] \
 [file normalize "${origin_dir}/../src/hdl/fifo_record_pkg.vhd"] \
 [file normalize "${origin_dir}/../src/hdl/adc_receiver_def_pkg.vhd"] \
 [file normalize "${origin_dir}/../src/hdl/data_control.vhd"] \
 [file normalize "${origin_dir}/../src/hdl/axi_16_reg_block.vhd"] \
 [file normalize "${origin_dir}/../src/hdl/idelay_wrapper.vhd"] \
 [file normalize "${origin_dir}/../src/hdl/deserializer.vhd"] \
 [file normalize "${origin_dir}/../src/hdl/adc_receiver.vhd"] \
 [file normalize "${origin_dir}/../src/hdl/pulse_sync.vhd"] \
 [file normalize "${origin_dir}/../src/hdl/quasistatic_sync.vhd"] \
 [file normalize "${origin_dir}/../src/hdl/vector_valid_sync.vhd"] \
 [file normalize "${origin_dir}/../src/hdl/level_sync.vhd"] \
 [file normalize "${origin_dir}/../src/hdl/sampler_with_ce.vhd"] \
 [file normalize "${origin_dir}/../src/hdl/debug_control.vhd"] \
 [file normalize "${origin_dir}/../src/hdl/preprocessing.vhd"] \
 [file normalize "${origin_dir}/../src/hdl/beam_sel_mux.vhd"] \
 [file normalize "${origin_dir}/../src/hdl/fifo_input_data_mux.vhd"] \
 [file normalize "${origin_dir}/../src/hdl/data_handler.vhd"] \
 [file normalize "${origin_dir}/../src/hdl/adc_control_wrapper.vhd"] \
 [file normalize "${origin_dir}/../src/hdl/delay_control.vhd"] \
 [file normalize "${origin_dir}/../src/hdl/ps_axi_spi_bd_wrapper.vhd"] \
 [file normalize "${origin_dir}/../src/hdl/SistAdq_top.vhd"] \
 [file normalize "${origin_dir}/../../../Fpga/prj/preprocessing_stage/src/helpers/complex_splitter.vhd"] \
 [file normalize "${origin_dir}/../../../Fpga/prj/preprocessing_stage/src/dsp/dsp_data_source_mux.vhd"] \
 [file normalize "${origin_dir}/../src/hdl/crc_32.vhd"] \
 [file normalize "${origin_dir}/../src/hdl/downsampler.vhd"] \
 [file normalize "${origin_dir}/../../../Fpga/prj/preprocessing_stage/src/helpers/resizer.vhd"] \
 [file normalize "${origin_dir}/../src/hdl/splitter.vhd"] \
 [file normalize "${origin_dir}/../src/ip/ch_mixer/ch_mixer/ch_mixer.xci"] \
 [file normalize "${origin_dir}/../../../Fpga/prj/preprocessing_stage/src/helpers/cdc_two_ff_sync.vhd"] \
 [file normalize "${origin_dir}/../../../Fpga/prj/preprocessing_stage/src/helpers/valid_data_holder.vhd"] \
 [file normalize "${origin_dir}/../src/ip/counter_32_bits/counter_32_bits/counter_32_bits.xci"] \
 [file normalize "${origin_dir}/../../../Fpga/prj/preprocessing_stage/src/helpers/cdc_comparator.vhd"] \
 [file normalize "${origin_dir}/../src/hdl/downsampler_control.vhd"] \
 [file normalize "${origin_dir}/../src/hdl/downsampler_tresh.vhd"] \
 [file normalize "${origin_dir}/../../../Fpga/prj/preprocessing_stage/src/helpers/subarray_creator.vhd"] \
 [file normalize "${origin_dir}/../../../Fpga/prj/preprocessing_stage/filters/lowpass.coe"] \
 [file normalize "${origin_dir}/../../../Fpga/prj/preprocessing_stage/filters/bandpass.coe"] \
]
add_files -norecurse -fileset $obj $files

# Set 'sources_1' fileset file properties for remote files
set file "$origin_dir/../src/hdl/pin_control.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../../Fpga/prj/preprocessing_stage/src/dsp/dsp_dds_compiler_controller.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../src/hdl/complex_conjugator.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../../Fpga/prj/preprocessing_stage/src/dsp/dsp_complex_gain.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../src/hdl/axi_joiner.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../src/hdl/beam_mux_fsm.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../../Fpga/prj/preprocessing_stage/src/helpers/zero_padder.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../../Fpga/prj/preprocessing_stage/src/helpers/basic_counter.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../src/hdl/copy_vector_N_times.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../src/hdl/data_source_mux_generic.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../src/ip/fifo_generator/fifo_generator.xci"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "generate_synth_checkpoint" -value "0" -objects $file_obj
}
set_property -name "registered_with_manager" -value "1" -objects $file_obj

set file "$origin_dir/../src/ip/c_counter_binary/c_counter_binary.xci"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "generate_synth_checkpoint" -value "0" -objects $file_obj
}
set_property -name "registered_with_manager" -value "1" -objects $file_obj

set file "$origin_dir/../src/ip/clk_wiz_preproc/clk_wiz_preproc.xci"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "generate_synth_checkpoint" -value "0" -objects $file_obj
}
set_property -name "registered_with_manager" -value "1" -objects $file_obj

set file "$origin_dir/../src/hdl/fifo_record_pkg.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../src/hdl/adc_receiver_def_pkg.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../src/hdl/data_control.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../src/hdl/axi_16_reg_block.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../src/hdl/idelay_wrapper.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../src/hdl/deserializer.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../src/hdl/adc_receiver.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../src/hdl/pulse_sync.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../src/hdl/quasistatic_sync.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../src/hdl/vector_valid_sync.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../src/hdl/level_sync.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../src/hdl/sampler_with_ce.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../src/hdl/debug_control.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../src/hdl/preprocessing.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../src/hdl/beam_sel_mux.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../src/hdl/fifo_input_data_mux.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../src/hdl/data_handler.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../src/hdl/adc_control_wrapper.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../src/hdl/delay_control.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../src/hdl/ps_axi_spi_bd_wrapper.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../src/hdl/SistAdq_top.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../../Fpga/prj/preprocessing_stage/src/helpers/complex_splitter.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../../Fpga/prj/preprocessing_stage/src/dsp/dsp_data_source_mux.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../src/hdl/crc_32.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../src/hdl/downsampler.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../../Fpga/prj/preprocessing_stage/src/helpers/resizer.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../src/hdl/splitter.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../src/ip/ch_mixer/ch_mixer/ch_mixer.xci"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "generate_synth_checkpoint" -value "0" -objects $file_obj
}
set_property -name "registered_with_manager" -value "1" -objects $file_obj

set file "$origin_dir/../../../Fpga/prj/preprocessing_stage/src/helpers/cdc_two_ff_sync.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../../Fpga/prj/preprocessing_stage/src/helpers/valid_data_holder.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../src/ip/counter_32_bits/counter_32_bits/counter_32_bits.xci"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "generate_synth_checkpoint" -value "0" -objects $file_obj
}
set_property -name "registered_with_manager" -value "1" -objects $file_obj

set file "$origin_dir/../../../Fpga/prj/preprocessing_stage/src/helpers/cdc_comparator.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../src/hdl/downsampler_control.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../src/hdl/downsampler_tresh.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../../Fpga/prj/preprocessing_stage/src/helpers/subarray_creator.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj


# Set 'sources_1' fileset file properties for local files
# None

# Set 'sources_1' fileset properties
set obj [get_filesets sources_1]
set_property -name "top" -value "SistAdq_top" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj

# Create 'constrs_1' fileset (if not found)
if {[string equal [get_filesets -quiet constrs_1] ""]} {
  create_fileset -constrset constrs_1
}

# Set 'constrs_1' fileset object
set obj [get_filesets constrs_1]

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/../src/constraints/ciaa_acc_SistAdq_ADC.xdc"]"
set file_added [add_files -norecurse -fileset $obj [list $file]]
set file "$origin_dir/../src/constraints/ciaa_acc_SistAdq_ADC.xdc"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/../src/constraints/ciaa_acc_SistAdq_general.xdc"]"
set file_added [add_files -norecurse -fileset $obj [list $file]]
set file "$origin_dir/../src/constraints/ciaa_acc_SistAdq_general.xdc"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/../src/constraints/ciaa_acc_SistAdq_timing.xdc"]"
set file_added [add_files -norecurse -fileset $obj [list $file]]
set file "$origin_dir/../src/constraints/ciaa_acc_SistAdq_timing.xdc"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj

# Set 'constrs_1' fileset properties
set obj [get_filesets constrs_1]
set_property -name "target_constrs_file" -value "[file normalize "$origin_dir/../src/constraints/ciaa_acc_SistAdq_timing.xdc"]" -objects $obj
set_property -name "target_ucf" -value "[file normalize "$origin_dir/../src/constraints/ciaa_acc_SistAdq_timing.xdc"]" -objects $obj

# Create 'sim_1' fileset (if not found)
if {[string equal [get_filesets -quiet sim_1] ""]} {
  create_fileset -simset sim_1
}

# Set 'sim_1' fileset object
set obj [get_filesets sim_1]
set files [list \
 [file normalize "${origin_dir}/../sim/adc_model/adc_model.vhd"] \
 [file normalize "${origin_dir}/../sim/tb_clk.vhd"] \
 [file normalize "${origin_dir}/../sim/adc_model/w1w2WordToggle.vhd"] \
 [file normalize "${origin_dir}/../sim/adc_model/contNbits.vhd"] \
 [file normalize "${origin_dir}/../sim/adc_model/adc_model_wrapper.vhd"] \
 [file normalize "${origin_dir}/../sim/test_deser.vhd"] \
 [file normalize "${origin_dir}/../sim/test_adc_model_wrapper.vhd"] \
 [file normalize "${origin_dir}/../sim/test_downsampler.vhd"] \
 [file normalize "${origin_dir}/../sim/test_selectio.vhd"] \
 [file normalize "${origin_dir}/../sim/test_fifo.vhd"] \
]
add_files -norecurse -fileset $obj $files

# Set 'sim_1' fileset file properties for remote files
set file "$origin_dir/../sim/adc_model/adc_model.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../sim/tb_clk.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../sim/adc_model/w1w2WordToggle.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../sim/adc_model/contNbits.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../sim/adc_model/adc_model_wrapper.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../sim/test_deser.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../sim/test_adc_model_wrapper.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../sim/test_downsampler.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../sim/test_selectio.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../sim/test_fifo.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj


# Set 'sim_1' fileset file properties for local files
# None

# Set 'sim_1' fileset properties
set obj [get_filesets sim_1]
set_property -name "hbs.configure_design_for_hier_access" -value "1" -objects $obj
set_property -name "nl.mode" -value "funcsim" -objects $obj
set_property -name "top" -value "test_deser" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj
set_property -name "top_lib" -value "xil_defaultlib" -objects $obj

# Set 'utils_1' fileset object
set obj [get_filesets utils_1]
# Empty (no sources present)

# Set 'utils_1' fileset properties
set obj [get_filesets utils_1]


# Adding sources referenced in BDs, if not already added
if { [get_files pin_control.vhd] == "" } {
  import_files -quiet -fileset sources_1 /run/media/fran/46FAA90DFAA8FA77/Ventanas/IB/PI/GitHub/PIQuinteros/Fpga/src/hdl/pin_control.vhd
}


# Proc to create BD ps_axi_spi_bd
proc cr_bd_ps_axi_spi_bd { parentCell } {
# The design that will be created by this Tcl proc contains the following 
# module references:
# pin_control



  # CHANGE DESIGN NAME HERE
  set design_name ps_axi_spi_bd

  common::send_gid_msg -ssname BD::TCL -id 2010 -severity "INFO" "Currently there is no design <$design_name> in project, so creating one..."

  create_bd_design $design_name

  set bCheckIPsPassed 1
  ##################################################################
  # CHECK IPs
  ##################################################################
  set bCheckIPs 1
  if { $bCheckIPs == 1 } {
     set list_check_ips "\ 
  xilinx.com:ip:clk_wiz:6.0\
  xilinx.com:ip:processing_system7:5.5\
  xilinx.com:ip:proc_sys_reset:5.0\
  xilinx.com:ip:axi_quad_spi:3.2\
  xilinx.com:ip:xlslice:1.0\
  "

   set list_ips_missing ""
   common::send_gid_msg -ssname BD::TCL -id 2011 -severity "INFO" "Checking if the following IPs exist in the project's IP catalog: $list_check_ips ."

   foreach ip_vlnv $list_check_ips {
      set ip_obj [get_ipdefs -all $ip_vlnv]
      if { $ip_obj eq "" } {
         lappend list_ips_missing $ip_vlnv
      }
   }

   if { $list_ips_missing ne "" } {
      catch {common::send_gid_msg -ssname BD::TCL -id 2012 -severity "ERROR" "The following IPs are not found in the IP Catalog:\n  $list_ips_missing\n\nResolution: Please add the repository containing the IP(s) to the project." }
      set bCheckIPsPassed 0
   }

  }

  ##################################################################
  # CHECK Modules
  ##################################################################
  set bCheckModules 1
  if { $bCheckModules == 1 } {
     set list_check_mods "\ 
  pin_control\
  "

   set list_mods_missing ""
   common::send_gid_msg -ssname BD::TCL -id 2020 -severity "INFO" "Checking if the following modules exist in the project's sources: $list_check_mods ."

   foreach mod_vlnv $list_check_mods {
      if { [can_resolve_reference $mod_vlnv] == 0 } {
         lappend list_mods_missing $mod_vlnv
      }
   }

   if { $list_mods_missing ne "" } {
      catch {common::send_gid_msg -ssname BD::TCL -id 2021 -severity "ERROR" "The following module(s) are not found in the project: $list_mods_missing" }
      common::send_gid_msg -ssname BD::TCL -id 2022 -severity "INFO" "Please add source files for the missing module(s) above."
      set bCheckIPsPassed 0
   }
}

  if { $bCheckIPsPassed != 1 } {
    common::send_gid_msg -ssname BD::TCL -id 2023 -severity "WARNING" "Will not continue with creation of design due to the error(s) above."
    return 3
  }

  
# Hierarchical cell: AXI_slow
proc create_hier_cell_AXI_slow { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2092 -severity "ERROR" "create_hier_cell_AXI_slow() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 S00_AXI


  # Create pins
  create_bd_pin -dir I -type clk ACLK
  create_bd_pin -dir I -type rst ARESETN
  create_bd_pin -dir I adc_FCO1lock_i
  create_bd_pin -dir I adc_FCO2lock_i
  create_bd_pin -dir O adc_sclk_o
  create_bd_pin -dir O adc_sdio_o
  create_bd_pin -dir O -from 0 -to 0 adc_ss1_o
  create_bd_pin -dir O -from 0 -to 0 adc_ss2_o
  create_bd_pin -dir O dout0_o
  create_bd_pin -dir O dout1_o
  create_bd_pin -dir I fmc_present_i
  create_bd_pin -dir O led_green_o
  create_bd_pin -dir O led_red_o
  create_bd_pin -dir O vadj_en_o

  # Create instance: axi_interconnect_0, and set properties
  set axi_interconnect_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_interconnect:2.1 axi_interconnect_0 ]

  # Create instance: axi_quad_spi_0, and set properties
  set axi_quad_spi_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_quad_spi:3.2 axi_quad_spi_0 ]
  set_property -dict [ list \
   CONFIG.C_NUM_SS_BITS {2} \
   CONFIG.C_NUM_TRANSFER_BITS {8} \
   CONFIG.C_SCK_RATIO {2} \
   CONFIG.C_USE_STARTUP {0} \
   CONFIG.C_USE_STARTUP_INT {0} \
 ] $axi_quad_spi_0

  # Create instance: pin_control_0, and set properties
  set block_name pin_control
  set block_cell_name pin_control_0
  if { [catch {set pin_control_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $pin_control_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.MAX_COUNT_1MS {50000} \
 ] $pin_control_0

  # Create instance: xlslice_bit0, and set properties
  set xlslice_bit0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_bit0 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {0} \
   CONFIG.DIN_TO {0} \
   CONFIG.DIN_WIDTH {2} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_bit0

  # Create instance: xlslice_bit1, and set properties
  set xlslice_bit1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_bit1 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {1} \
   CONFIG.DIN_TO {1} \
   CONFIG.DIN_WIDTH {2} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_bit1

  # Create interface connections
  connect_bd_intf_net -intf_net axi_interconnect_0_M00_AXI [get_bd_intf_pins axi_interconnect_0/M00_AXI] [get_bd_intf_pins pin_control_0/S_AXI]
  connect_bd_intf_net -intf_net axi_interconnect_0_M01_AXI [get_bd_intf_pins axi_interconnect_0/M01_AXI] [get_bd_intf_pins axi_quad_spi_0/AXI_LITE]
  connect_bd_intf_net -intf_net processing_system7_0_M_AXI_GP1 [get_bd_intf_pins S00_AXI] [get_bd_intf_pins axi_interconnect_0/S00_AXI]

  # Create port connections
  connect_bd_net -net ACLK_1 [get_bd_pins ACLK] [get_bd_pins axi_interconnect_0/ACLK] [get_bd_pins axi_interconnect_0/M00_ACLK] [get_bd_pins axi_interconnect_0/M01_ACLK] [get_bd_pins axi_interconnect_0/S00_ACLK] [get_bd_pins axi_quad_spi_0/ext_spi_clk] [get_bd_pins axi_quad_spi_0/s_axi_aclk] [get_bd_pins pin_control_0/S_AXI_ACLK]
  connect_bd_net -net ADC_AcqControl_adc_FCO1lck_o [get_bd_pins adc_FCO1lock_i] [get_bd_pins pin_control_0/adc_FCO1lock_i]
  connect_bd_net -net ADC_AcqControl_adc_FCO2lck_o [get_bd_pins adc_FCO2lock_i] [get_bd_pins pin_control_0/adc_FCO2lock_i]
  connect_bd_net -net axi_quad_spi_0_io0_o [get_bd_pins adc_sdio_o] [get_bd_pins axi_quad_spi_0/io0_o]
  connect_bd_net -net axi_quad_spi_0_sck_o [get_bd_pins adc_sclk_o] [get_bd_pins axi_quad_spi_0/sck_o]
  connect_bd_net -net axi_quad_spi_0_ss_o [get_bd_pins axi_quad_spi_0/ss_o] [get_bd_pins xlslice_bit0/Din] [get_bd_pins xlslice_bit1/Din]
  connect_bd_net -net fmc_present_i_0_1 [get_bd_pins fmc_present_i] [get_bd_pins pin_control_0/fmc_present_i]
  connect_bd_net -net pin_control_0_led_dout0_o [get_bd_pins dout0_o] [get_bd_pins pin_control_0/led_dout0_o]
  connect_bd_net -net pin_control_0_led_dout1_o [get_bd_pins dout1_o] [get_bd_pins pin_control_0/led_dout1_o]
  connect_bd_net -net pin_control_0_led_green_o [get_bd_pins led_green_o] [get_bd_pins pin_control_0/led_green_o]
  connect_bd_net -net pin_control_0_led_red_o [get_bd_pins led_red_o] [get_bd_pins pin_control_0/led_red_o]
  connect_bd_net -net pin_control_0_vadj_en_o [get_bd_pins vadj_en_o] [get_bd_pins pin_control_0/vadj_en_o]
  connect_bd_net -net reset_slow_interconnect_aresetn [get_bd_pins ARESETN] [get_bd_pins axi_interconnect_0/ARESETN] [get_bd_pins axi_interconnect_0/M00_ARESETN] [get_bd_pins axi_interconnect_0/M01_ARESETN] [get_bd_pins axi_interconnect_0/S00_ARESETN] [get_bd_pins axi_quad_spi_0/s_axi_aresetn] [get_bd_pins pin_control_0/S_AXI_ARESETN]
  connect_bd_net -net xlslice_bit0_Dout [get_bd_pins adc_ss2_o] [get_bd_pins xlslice_bit0/Dout]
  connect_bd_net -net xlslice_bit1_Dout [get_bd_pins adc_ss1_o] [get_bd_pins xlslice_bit1/Dout]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  variable script_folder

  if { $parentCell eq "" } {
     set parentCell [get_bd_cells /]
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj


  # Create interface ports
  set FIXED_IO_0 [ create_bd_intf_port -mode Master -vlnv xilinx.com:display_processing_system7:fixedio_rtl:1.0 FIXED_IO_0 ]

  set m_axi4l_control [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:aximm_rtl:1.0 m_axi4l_control ]
  set_property -dict [ list \
   CONFIG.ADDR_WIDTH {32} \
   CONFIG.DATA_WIDTH {32} \
   CONFIG.FREQ_HZ {200000000} \
   CONFIG.NUM_READ_OUTSTANDING {2} \
   CONFIG.NUM_WRITE_OUTSTANDING {2} \
   CONFIG.PROTOCOL {AXI4LITE} \
   ] $m_axi4l_control

  set m_axi4l_delay [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:aximm_rtl:1.0 m_axi4l_delay ]
  set_property -dict [ list \
   CONFIG.ADDR_WIDTH {32} \
   CONFIG.DATA_WIDTH {32} \
   CONFIG.FREQ_HZ {200000000} \
   CONFIG.NUM_READ_OUTSTANDING {2} \
   CONFIG.NUM_WRITE_OUTSTANDING {2} \
   CONFIG.PROTOCOL {AXI4LITE} \
   ] $m_axi4l_delay

  set m_axi4l_preproc [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:aximm_rtl:1.0 m_axi4l_preproc ]
  set_property -dict [ list \
   CONFIG.ADDR_WIDTH {32} \
   CONFIG.DATA_WIDTH {32} \
   CONFIG.FREQ_HZ {200000000} \
   CONFIG.NUM_READ_OUTSTANDING {2} \
   CONFIG.NUM_WRITE_OUTSTANDING {2} \
   CONFIG.PROTOCOL {AXI4LITE} \
   ] $m_axi4l_preproc


  # Create ports
  set adc_FCO1lock_i [ create_bd_port -dir I adc_FCO1lock_i ]
  set adc_FCO2lock_i [ create_bd_port -dir I adc_FCO2lock_i ]
  set adc_sclk_o [ create_bd_port -dir O adc_sclk_o ]
  set adc_sdio_o [ create_bd_port -dir O adc_sdio_o ]
  set adc_ss1_o [ create_bd_port -dir O -from 0 -to 0 adc_ss1_o ]
  set adc_ss2_o [ create_bd_port -dir O -from 0 -to 0 adc_ss2_o ]
  set dout0_o [ create_bd_port -dir O dout0_o ]
  set dout1_o [ create_bd_port -dir O dout1_o ]
  set fmc_present_i [ create_bd_port -dir I fmc_present_i ]
  set led_green_o [ create_bd_port -dir O led_green_o ]
  set led_red_o [ create_bd_port -dir O led_red_o ]
  set ps_clk_o [ create_bd_port -dir O -type clk ps_clk_o ]
  set_property -dict [ list \
   CONFIG.ASSOCIATED_BUSIF {m_axi4l_control:m_axi4l_preproc:m_axi4l_delay} \
   CONFIG.FREQ_HZ {200000000} \
 ] $ps_clk_o
  set ps_rst_n_o [ create_bd_port -dir O -from 0 -to 0 -type rst ps_rst_n_o ]
  set ps_rst_o [ create_bd_port -dir O -from 0 -to 0 -type rst ps_rst_o ]
  set vadj_en_o [ create_bd_port -dir O vadj_en_o ]

  # Create instance: AXI_slow
  create_hier_cell_AXI_slow [current_bd_instance .] AXI_slow

  # Create instance: axi_interconnect_fast, and set properties
  set axi_interconnect_fast [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_interconnect:2.1 axi_interconnect_fast ]
  set_property -dict [ list \
   CONFIG.NUM_MI {3} \
 ] $axi_interconnect_fast

  # Create instance: clk_fpga_divide, and set properties
  set clk_fpga_divide [ create_bd_cell -type ip -vlnv xilinx.com:ip:clk_wiz:6.0 clk_fpga_divide ]
  set_property -dict [ list \
   CONFIG.CLKOUT1_JITTER {129.198} \
   CONFIG.CLKOUT1_REQUESTED_OUT_FREQ {50} \
   CONFIG.MMCM_CLKOUT0_DIVIDE_F {20.000} \
   CONFIG.PRIM_SOURCE {Global_buffer} \
   CONFIG.USE_LOCKED {false} \
   CONFIG.USE_RESET {false} \
 ] $clk_fpga_divide

  # Create instance: processing_system7_0, and set properties
  set processing_system7_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:processing_system7:5.5 processing_system7_0 ]
  set_property -dict [ list \
   CONFIG.PCW_ACT_APU_PERIPHERAL_FREQMHZ {800.000000} \
   CONFIG.PCW_ACT_CAN0_PERIPHERAL_FREQMHZ {23.8095} \
   CONFIG.PCW_ACT_CAN1_PERIPHERAL_FREQMHZ {23.8095} \
   CONFIG.PCW_ACT_CAN_PERIPHERAL_FREQMHZ {10.000000} \
   CONFIG.PCW_ACT_DCI_PERIPHERAL_FREQMHZ {10.158730} \
   CONFIG.PCW_ACT_ENET0_PERIPHERAL_FREQMHZ {125.000000} \
   CONFIG.PCW_ACT_ENET1_PERIPHERAL_FREQMHZ {10.000000} \
   CONFIG.PCW_ACT_FPGA0_PERIPHERAL_FREQMHZ {200.000000} \
   CONFIG.PCW_ACT_FPGA1_PERIPHERAL_FREQMHZ {10.000000} \
   CONFIG.PCW_ACT_FPGA2_PERIPHERAL_FREQMHZ {10.000000} \
   CONFIG.PCW_ACT_FPGA3_PERIPHERAL_FREQMHZ {10.000000} \
   CONFIG.PCW_ACT_I2C_PERIPHERAL_FREQMHZ {50} \
   CONFIG.PCW_ACT_PCAP_PERIPHERAL_FREQMHZ {200.000000} \
   CONFIG.PCW_ACT_QSPI_PERIPHERAL_FREQMHZ {142.857132} \
   CONFIG.PCW_ACT_SDIO_PERIPHERAL_FREQMHZ {50.000000} \
   CONFIG.PCW_ACT_SMC_PERIPHERAL_FREQMHZ {10.000000} \
   CONFIG.PCW_ACT_SPI_PERIPHERAL_FREQMHZ {10.000000} \
   CONFIG.PCW_ACT_TPIU_PERIPHERAL_FREQMHZ {200.000000} \
   CONFIG.PCW_ACT_TTC0_CLK0_PERIPHERAL_FREQMHZ {133.333344} \
   CONFIG.PCW_ACT_TTC0_CLK1_PERIPHERAL_FREQMHZ {133.333344} \
   CONFIG.PCW_ACT_TTC0_CLK2_PERIPHERAL_FREQMHZ {133.333344} \
   CONFIG.PCW_ACT_TTC1_CLK0_PERIPHERAL_FREQMHZ {133.333344} \
   CONFIG.PCW_ACT_TTC1_CLK1_PERIPHERAL_FREQMHZ {133.333344} \
   CONFIG.PCW_ACT_TTC1_CLK2_PERIPHERAL_FREQMHZ {133.333344} \
   CONFIG.PCW_ACT_TTC_PERIPHERAL_FREQMHZ {50} \
   CONFIG.PCW_ACT_UART_PERIPHERAL_FREQMHZ {100.000000} \
   CONFIG.PCW_ACT_USB0_PERIPHERAL_FREQMHZ {60} \
   CONFIG.PCW_ACT_USB1_PERIPHERAL_FREQMHZ {60} \
   CONFIG.PCW_ACT_WDT_PERIPHERAL_FREQMHZ {133.333344} \
   CONFIG.PCW_APU_CLK_RATIO_ENABLE {6:2:1} \
   CONFIG.PCW_APU_PERIPHERAL_FREQMHZ {800} \
   CONFIG.PCW_ARMPLL_CTRL_FBDIV {48} \
   CONFIG.PCW_CAN0_BASEADDR {0xE0008000} \
   CONFIG.PCW_CAN0_GRP_CLK_ENABLE {0} \
   CONFIG.PCW_CAN0_HIGHADDR {0xE0008FFF} \
   CONFIG.PCW_CAN0_PERIPHERAL_CLKSRC {External} \
   CONFIG.PCW_CAN0_PERIPHERAL_ENABLE {0} \
   CONFIG.PCW_CAN0_PERIPHERAL_FREQMHZ {-1} \
   CONFIG.PCW_CAN1_BASEADDR {0xE0009000} \
   CONFIG.PCW_CAN1_GRP_CLK_ENABLE {0} \
   CONFIG.PCW_CAN1_HIGHADDR {0xE0009FFF} \
   CONFIG.PCW_CAN1_PERIPHERAL_CLKSRC {External} \
   CONFIG.PCW_CAN1_PERIPHERAL_ENABLE {0} \
   CONFIG.PCW_CAN1_PERIPHERAL_FREQMHZ {-1} \
   CONFIG.PCW_CAN_PERIPHERAL_CLKSRC {IO PLL} \
   CONFIG.PCW_CAN_PERIPHERAL_DIVISOR0 {1} \
   CONFIG.PCW_CAN_PERIPHERAL_DIVISOR1 {1} \
   CONFIG.PCW_CAN_PERIPHERAL_FREQMHZ {100} \
   CONFIG.PCW_CAN_PERIPHERAL_VALID {0} \
   CONFIG.PCW_CLK0_FREQ {200000000} \
   CONFIG.PCW_CLK1_FREQ {10000000} \
   CONFIG.PCW_CLK2_FREQ {10000000} \
   CONFIG.PCW_CLK3_FREQ {10000000} \
   CONFIG.PCW_CORE0_FIQ_INTR {0} \
   CONFIG.PCW_CORE0_IRQ_INTR {0} \
   CONFIG.PCW_CORE1_FIQ_INTR {0} \
   CONFIG.PCW_CORE1_IRQ_INTR {0} \
   CONFIG.PCW_CPU_CPU_6X4X_MAX_RANGE {800} \
   CONFIG.PCW_CPU_CPU_PLL_FREQMHZ {1600.000} \
   CONFIG.PCW_CPU_PERIPHERAL_CLKSRC {ARM PLL} \
   CONFIG.PCW_CPU_PERIPHERAL_DIVISOR0 {2} \
   CONFIG.PCW_CRYSTAL_PERIPHERAL_FREQMHZ {33.333333} \
   CONFIG.PCW_DCI_PERIPHERAL_CLKSRC {DDR PLL} \
   CONFIG.PCW_DCI_PERIPHERAL_DIVISOR0 {15} \
   CONFIG.PCW_DCI_PERIPHERAL_DIVISOR1 {7} \
   CONFIG.PCW_DCI_PERIPHERAL_FREQMHZ {10.159} \
   CONFIG.PCW_DDRPLL_CTRL_FBDIV {32} \
   CONFIG.PCW_DDR_DDR_PLL_FREQMHZ {1066.667} \
   CONFIG.PCW_DDR_HPRLPR_QUEUE_PARTITION {HPR(0)/LPR(32)} \
   CONFIG.PCW_DDR_HPR_TO_CRITICAL_PRIORITY_LEVEL {15} \
   CONFIG.PCW_DDR_LPR_TO_CRITICAL_PRIORITY_LEVEL {2} \
   CONFIG.PCW_DDR_PERIPHERAL_CLKSRC {DDR PLL} \
   CONFIG.PCW_DDR_PERIPHERAL_DIVISOR0 {2} \
   CONFIG.PCW_DDR_PORT0_HPR_ENABLE {0} \
   CONFIG.PCW_DDR_PORT1_HPR_ENABLE {0} \
   CONFIG.PCW_DDR_PORT2_HPR_ENABLE {0} \
   CONFIG.PCW_DDR_PORT3_HPR_ENABLE {0} \
   CONFIG.PCW_DDR_RAM_BASEADDR {0x00100000} \
   CONFIG.PCW_DDR_RAM_HIGHADDR {0x3FFFFFFF} \
   CONFIG.PCW_DDR_WRITE_TO_CRITICAL_PRIORITY_LEVEL {2} \
   CONFIG.PCW_DM_WIDTH {4} \
   CONFIG.PCW_DQS_WIDTH {4} \
   CONFIG.PCW_DQ_WIDTH {32} \
   CONFIG.PCW_ENET0_BASEADDR {0xE000B000} \
   CONFIG.PCW_ENET0_ENET0_IO {MIO 16 .. 27} \
   CONFIG.PCW_ENET0_GRP_MDIO_ENABLE {1} \
   CONFIG.PCW_ENET0_GRP_MDIO_IO {MIO 52 .. 53} \
   CONFIG.PCW_ENET0_HIGHADDR {0xE000BFFF} \
   CONFIG.PCW_ENET0_PERIPHERAL_CLKSRC {IO PLL} \
   CONFIG.PCW_ENET0_PERIPHERAL_DIVISOR0 {8} \
   CONFIG.PCW_ENET0_PERIPHERAL_DIVISOR1 {1} \
   CONFIG.PCW_ENET0_PERIPHERAL_ENABLE {1} \
   CONFIG.PCW_ENET0_PERIPHERAL_FREQMHZ {1000 Mbps} \
   CONFIG.PCW_ENET0_RESET_ENABLE {0} \
   CONFIG.PCW_ENET1_BASEADDR {0xE000C000} \
   CONFIG.PCW_ENET1_GRP_MDIO_ENABLE {0} \
   CONFIG.PCW_ENET1_HIGHADDR {0xE000CFFF} \
   CONFIG.PCW_ENET1_PERIPHERAL_CLKSRC {IO PLL} \
   CONFIG.PCW_ENET1_PERIPHERAL_DIVISOR0 {1} \
   CONFIG.PCW_ENET1_PERIPHERAL_DIVISOR1 {1} \
   CONFIG.PCW_ENET1_PERIPHERAL_ENABLE {0} \
   CONFIG.PCW_ENET1_PERIPHERAL_FREQMHZ {1000 Mbps} \
   CONFIG.PCW_ENET1_RESET_ENABLE {0} \
   CONFIG.PCW_ENET_RESET_ENABLE {0} \
   CONFIG.PCW_ENET_RESET_POLARITY {Active Low} \
   CONFIG.PCW_EN_4K_TIMER {0} \
   CONFIG.PCW_EN_CAN0 {0} \
   CONFIG.PCW_EN_CAN1 {0} \
   CONFIG.PCW_EN_CLK0_PORT {1} \
   CONFIG.PCW_EN_CLK1_PORT {0} \
   CONFIG.PCW_EN_CLK2_PORT {0} \
   CONFIG.PCW_EN_CLK3_PORT {0} \
   CONFIG.PCW_EN_CLKTRIG0_PORT {0} \
   CONFIG.PCW_EN_CLKTRIG1_PORT {0} \
   CONFIG.PCW_EN_CLKTRIG2_PORT {0} \
   CONFIG.PCW_EN_CLKTRIG3_PORT {0} \
   CONFIG.PCW_EN_DDR {0} \
   CONFIG.PCW_EN_EMIO_CAN0 {0} \
   CONFIG.PCW_EN_EMIO_CAN1 {0} \
   CONFIG.PCW_EN_EMIO_CD_SDIO0 {0} \
   CONFIG.PCW_EN_EMIO_CD_SDIO1 {0} \
   CONFIG.PCW_EN_EMIO_ENET0 {0} \
   CONFIG.PCW_EN_EMIO_ENET1 {0} \
   CONFIG.PCW_EN_EMIO_GPIO {0} \
   CONFIG.PCW_EN_EMIO_I2C0 {0} \
   CONFIG.PCW_EN_EMIO_I2C1 {0} \
   CONFIG.PCW_EN_EMIO_MODEM_UART0 {0} \
   CONFIG.PCW_EN_EMIO_MODEM_UART1 {0} \
   CONFIG.PCW_EN_EMIO_PJTAG {0} \
   CONFIG.PCW_EN_EMIO_SDIO0 {0} \
   CONFIG.PCW_EN_EMIO_SDIO1 {0} \
   CONFIG.PCW_EN_EMIO_SPI0 {0} \
   CONFIG.PCW_EN_EMIO_SPI1 {0} \
   CONFIG.PCW_EN_EMIO_SRAM_INT {0} \
   CONFIG.PCW_EN_EMIO_TRACE {0} \
   CONFIG.PCW_EN_EMIO_TTC0 {0} \
   CONFIG.PCW_EN_EMIO_TTC1 {0} \
   CONFIG.PCW_EN_EMIO_UART0 {0} \
   CONFIG.PCW_EN_EMIO_UART1 {0} \
   CONFIG.PCW_EN_EMIO_WDT {0} \
   CONFIG.PCW_EN_EMIO_WP_SDIO0 {0} \
   CONFIG.PCW_EN_EMIO_WP_SDIO1 {0} \
   CONFIG.PCW_EN_ENET0 {1} \
   CONFIG.PCW_EN_ENET1 {0} \
   CONFIG.PCW_EN_GPIO {0} \
   CONFIG.PCW_EN_I2C0 {1} \
   CONFIG.PCW_EN_I2C1 {1} \
   CONFIG.PCW_EN_MODEM_UART0 {0} \
   CONFIG.PCW_EN_MODEM_UART1 {0} \
   CONFIG.PCW_EN_PJTAG {0} \
   CONFIG.PCW_EN_PTP_ENET0 {0} \
   CONFIG.PCW_EN_PTP_ENET1 {0} \
   CONFIG.PCW_EN_QSPI {1} \
   CONFIG.PCW_EN_RST0_PORT {1} \
   CONFIG.PCW_EN_RST1_PORT {0} \
   CONFIG.PCW_EN_RST2_PORT {0} \
   CONFIG.PCW_EN_RST3_PORT {0} \
   CONFIG.PCW_EN_SDIO0 {1} \
   CONFIG.PCW_EN_SDIO1 {0} \
   CONFIG.PCW_EN_SMC {0} \
   CONFIG.PCW_EN_SPI0 {0} \
   CONFIG.PCW_EN_SPI1 {0} \
   CONFIG.PCW_EN_TRACE {0} \
   CONFIG.PCW_EN_TTC0 {0} \
   CONFIG.PCW_EN_TTC1 {0} \
   CONFIG.PCW_EN_UART0 {1} \
   CONFIG.PCW_EN_UART1 {1} \
   CONFIG.PCW_EN_USB0 {0} \
   CONFIG.PCW_EN_USB1 {0} \
   CONFIG.PCW_EN_WDT {0} \
   CONFIG.PCW_FCLK0_PERIPHERAL_CLKSRC {IO PLL} \
   CONFIG.PCW_FCLK0_PERIPHERAL_DIVISOR0 {5} \
   CONFIG.PCW_FCLK0_PERIPHERAL_DIVISOR1 {1} \
   CONFIG.PCW_FCLK1_PERIPHERAL_CLKSRC {IO PLL} \
   CONFIG.PCW_FCLK1_PERIPHERAL_DIVISOR0 {1} \
   CONFIG.PCW_FCLK1_PERIPHERAL_DIVISOR1 {1} \
   CONFIG.PCW_FCLK2_PERIPHERAL_CLKSRC {DDR PLL} \
   CONFIG.PCW_FCLK2_PERIPHERAL_DIVISOR0 {1} \
   CONFIG.PCW_FCLK2_PERIPHERAL_DIVISOR1 {1} \
   CONFIG.PCW_FCLK3_PERIPHERAL_CLKSRC {IO PLL} \
   CONFIG.PCW_FCLK3_PERIPHERAL_DIVISOR0 {1} \
   CONFIG.PCW_FCLK3_PERIPHERAL_DIVISOR1 {1} \
   CONFIG.PCW_FCLK_CLK0_BUF {TRUE} \
   CONFIG.PCW_FCLK_CLK1_BUF {FALSE} \
   CONFIG.PCW_FCLK_CLK2_BUF {FALSE} \
   CONFIG.PCW_FCLK_CLK3_BUF {FALSE} \
   CONFIG.PCW_FPGA0_PERIPHERAL_FREQMHZ {200} \
   CONFIG.PCW_FPGA1_PERIPHERAL_FREQMHZ {250} \
   CONFIG.PCW_FPGA2_PERIPHERAL_FREQMHZ {100} \
   CONFIG.PCW_FPGA3_PERIPHERAL_FREQMHZ {50} \
   CONFIG.PCW_FPGA_FCLK0_ENABLE {1} \
   CONFIG.PCW_FPGA_FCLK1_ENABLE {0} \
   CONFIG.PCW_FPGA_FCLK2_ENABLE {0} \
   CONFIG.PCW_FPGA_FCLK3_ENABLE {0} \
   CONFIG.PCW_GP0_EN_MODIFIABLE_TXN {1} \
   CONFIG.PCW_GP0_NUM_READ_THREADS {4} \
   CONFIG.PCW_GP0_NUM_WRITE_THREADS {4} \
   CONFIG.PCW_GP1_EN_MODIFIABLE_TXN {1} \
   CONFIG.PCW_GP1_NUM_READ_THREADS {4} \
   CONFIG.PCW_GP1_NUM_WRITE_THREADS {4} \
   CONFIG.PCW_GPIO_BASEADDR {0xE000A000} \
   CONFIG.PCW_GPIO_EMIO_GPIO_ENABLE {0} \
   CONFIG.PCW_GPIO_EMIO_GPIO_WIDTH {64} \
   CONFIG.PCW_GPIO_HIGHADDR {0xE000AFFF} \
   CONFIG.PCW_GPIO_MIO_GPIO_ENABLE {0} \
   CONFIG.PCW_GPIO_PERIPHERAL_ENABLE {0} \
   CONFIG.PCW_I2C0_BASEADDR {0xE0004000} \
   CONFIG.PCW_I2C0_GRP_INT_ENABLE {0} \
   CONFIG.PCW_I2C0_HIGHADDR {0xE0004FFF} \
   CONFIG.PCW_I2C0_I2C0_IO {MIO 14 .. 15} \
   CONFIG.PCW_I2C0_PERIPHERAL_ENABLE {1} \
   CONFIG.PCW_I2C0_RESET_ENABLE {0} \
   CONFIG.PCW_I2C1_BASEADDR {0xE0005000} \
   CONFIG.PCW_I2C1_GRP_INT_ENABLE {0} \
   CONFIG.PCW_I2C1_HIGHADDR {0xE0005FFF} \
   CONFIG.PCW_I2C1_I2C1_IO {MIO 12 .. 13} \
   CONFIG.PCW_I2C1_PERIPHERAL_ENABLE {1} \
   CONFIG.PCW_I2C1_RESET_ENABLE {0} \
   CONFIG.PCW_I2C_PERIPHERAL_FREQMHZ {133.333328} \
   CONFIG.PCW_I2C_RESET_ENABLE {0} \
   CONFIG.PCW_I2C_RESET_POLARITY {Active Low} \
   CONFIG.PCW_IMPORT_BOARD_PRESET {None} \
   CONFIG.PCW_INCLUDE_ACP_TRANS_CHECK {0} \
   CONFIG.PCW_INCLUDE_TRACE_BUFFER {0} \
   CONFIG.PCW_IOPLL_CTRL_FBDIV {30} \
   CONFIG.PCW_IO_IO_PLL_FREQMHZ {1000.000} \
   CONFIG.PCW_IRQ_F2P_INTR {0} \
   CONFIG.PCW_IRQ_F2P_MODE {DIRECT} \
   CONFIG.PCW_MIO_10_DIRECTION {in} \
   CONFIG.PCW_MIO_10_IOTYPE {LVCMOS 3.3V} \
   CONFIG.PCW_MIO_10_PULLUP {disabled} \
   CONFIG.PCW_MIO_10_SLEW {slow} \
   CONFIG.PCW_MIO_11_DIRECTION {out} \
   CONFIG.PCW_MIO_11_IOTYPE {LVCMOS 3.3V} \
   CONFIG.PCW_MIO_11_PULLUP {disabled} \
   CONFIG.PCW_MIO_11_SLEW {slow} \
   CONFIG.PCW_MIO_12_DIRECTION {inout} \
   CONFIG.PCW_MIO_12_IOTYPE {LVCMOS 3.3V} \
   CONFIG.PCW_MIO_12_PULLUP {enabled} \
   CONFIG.PCW_MIO_12_SLEW {slow} \
   CONFIG.PCW_MIO_13_DIRECTION {inout} \
   CONFIG.PCW_MIO_13_IOTYPE {LVCMOS 3.3V} \
   CONFIG.PCW_MIO_13_PULLUP {enabled} \
   CONFIG.PCW_MIO_13_SLEW {slow} \
   CONFIG.PCW_MIO_14_DIRECTION {inout} \
   CONFIG.PCW_MIO_14_IOTYPE {LVCMOS 3.3V} \
   CONFIG.PCW_MIO_14_PULLUP {enabled} \
   CONFIG.PCW_MIO_14_SLEW {slow} \
   CONFIG.PCW_MIO_15_DIRECTION {inout} \
   CONFIG.PCW_MIO_15_IOTYPE {LVCMOS 3.3V} \
   CONFIG.PCW_MIO_15_PULLUP {enabled} \
   CONFIG.PCW_MIO_15_SLEW {slow} \
   CONFIG.PCW_MIO_16_DIRECTION {out} \
   CONFIG.PCW_MIO_16_IOTYPE {LVCMOS 1.8V} \
   CONFIG.PCW_MIO_16_PULLUP {enabled} \
   CONFIG.PCW_MIO_16_SLEW {slow} \
   CONFIG.PCW_MIO_17_DIRECTION {out} \
   CONFIG.PCW_MIO_17_IOTYPE {LVCMOS 1.8V} \
   CONFIG.PCW_MIO_17_PULLUP {enabled} \
   CONFIG.PCW_MIO_17_SLEW {slow} \
   CONFIG.PCW_MIO_18_DIRECTION {out} \
   CONFIG.PCW_MIO_18_IOTYPE {LVCMOS 1.8V} \
   CONFIG.PCW_MIO_18_PULLUP {enabled} \
   CONFIG.PCW_MIO_18_SLEW {slow} \
   CONFIG.PCW_MIO_19_DIRECTION {out} \
   CONFIG.PCW_MIO_19_IOTYPE {LVCMOS 1.8V} \
   CONFIG.PCW_MIO_19_PULLUP {enabled} \
   CONFIG.PCW_MIO_19_SLEW {slow} \
   CONFIG.PCW_MIO_1_DIRECTION {out} \
   CONFIG.PCW_MIO_1_IOTYPE {LVCMOS 3.3V} \
   CONFIG.PCW_MIO_1_PULLUP {enabled} \
   CONFIG.PCW_MIO_1_SLEW {slow} \
   CONFIG.PCW_MIO_20_DIRECTION {out} \
   CONFIG.PCW_MIO_20_IOTYPE {LVCMOS 1.8V} \
   CONFIG.PCW_MIO_20_PULLUP {enabled} \
   CONFIG.PCW_MIO_20_SLEW {slow} \
   CONFIG.PCW_MIO_21_DIRECTION {out} \
   CONFIG.PCW_MIO_21_IOTYPE {LVCMOS 1.8V} \
   CONFIG.PCW_MIO_21_PULLUP {enabled} \
   CONFIG.PCW_MIO_21_SLEW {slow} \
   CONFIG.PCW_MIO_22_DIRECTION {in} \
   CONFIG.PCW_MIO_22_IOTYPE {LVCMOS 1.8V} \
   CONFIG.PCW_MIO_22_PULLUP {enabled} \
   CONFIG.PCW_MIO_22_SLEW {slow} \
   CONFIG.PCW_MIO_23_DIRECTION {in} \
   CONFIG.PCW_MIO_23_IOTYPE {LVCMOS 1.8V} \
   CONFIG.PCW_MIO_23_PULLUP {enabled} \
   CONFIG.PCW_MIO_23_SLEW {slow} \
   CONFIG.PCW_MIO_24_DIRECTION {in} \
   CONFIG.PCW_MIO_24_IOTYPE {LVCMOS 1.8V} \
   CONFIG.PCW_MIO_24_PULLUP {enabled} \
   CONFIG.PCW_MIO_24_SLEW {slow} \
   CONFIG.PCW_MIO_25_DIRECTION {in} \
   CONFIG.PCW_MIO_25_IOTYPE {LVCMOS 1.8V} \
   CONFIG.PCW_MIO_25_PULLUP {enabled} \
   CONFIG.PCW_MIO_25_SLEW {slow} \
   CONFIG.PCW_MIO_26_DIRECTION {in} \
   CONFIG.PCW_MIO_26_IOTYPE {LVCMOS 1.8V} \
   CONFIG.PCW_MIO_26_PULLUP {enabled} \
   CONFIG.PCW_MIO_26_SLEW {slow} \
   CONFIG.PCW_MIO_27_DIRECTION {in} \
   CONFIG.PCW_MIO_27_IOTYPE {LVCMOS 1.8V} \
   CONFIG.PCW_MIO_27_PULLUP {enabled} \
   CONFIG.PCW_MIO_27_SLEW {slow} \
   CONFIG.PCW_MIO_2_DIRECTION {inout} \
   CONFIG.PCW_MIO_2_IOTYPE {LVCMOS 3.3V} \
   CONFIG.PCW_MIO_2_PULLUP {disabled} \
   CONFIG.PCW_MIO_2_SLEW {slow} \
   CONFIG.PCW_MIO_3_DIRECTION {inout} \
   CONFIG.PCW_MIO_3_IOTYPE {LVCMOS 3.3V} \
   CONFIG.PCW_MIO_3_PULLUP {disabled} \
   CONFIG.PCW_MIO_3_SLEW {slow} \
   CONFIG.PCW_MIO_40_DIRECTION {inout} \
   CONFIG.PCW_MIO_40_IOTYPE {LVCMOS 1.8V} \
   CONFIG.PCW_MIO_40_PULLUP {disabled} \
   CONFIG.PCW_MIO_40_SLEW {fast} \
   CONFIG.PCW_MIO_41_DIRECTION {inout} \
   CONFIG.PCW_MIO_41_IOTYPE {LVCMOS 1.8V} \
   CONFIG.PCW_MIO_41_PULLUP {disabled} \
   CONFIG.PCW_MIO_41_SLEW {fast} \
   CONFIG.PCW_MIO_42_DIRECTION {inout} \
   CONFIG.PCW_MIO_42_IOTYPE {LVCMOS 1.8V} \
   CONFIG.PCW_MIO_42_PULLUP {disabled} \
   CONFIG.PCW_MIO_42_SLEW {fast} \
   CONFIG.PCW_MIO_43_DIRECTION {inout} \
   CONFIG.PCW_MIO_43_IOTYPE {LVCMOS 1.8V} \
   CONFIG.PCW_MIO_43_PULLUP {disabled} \
   CONFIG.PCW_MIO_43_SLEW {fast} \
   CONFIG.PCW_MIO_44_DIRECTION {inout} \
   CONFIG.PCW_MIO_44_IOTYPE {LVCMOS 1.8V} \
   CONFIG.PCW_MIO_44_PULLUP {disabled} \
   CONFIG.PCW_MIO_44_SLEW {fast} \
   CONFIG.PCW_MIO_45_DIRECTION {inout} \
   CONFIG.PCW_MIO_45_IOTYPE {LVCMOS 1.8V} \
   CONFIG.PCW_MIO_45_PULLUP {disabled} \
   CONFIG.PCW_MIO_45_SLEW {fast} \
   CONFIG.PCW_MIO_4_DIRECTION {inout} \
   CONFIG.PCW_MIO_4_IOTYPE {LVCMOS 3.3V} \
   CONFIG.PCW_MIO_4_PULLUP {disabled} \
   CONFIG.PCW_MIO_4_SLEW {slow} \
   CONFIG.PCW_MIO_52_DIRECTION {out} \
   CONFIG.PCW_MIO_52_IOTYPE {LVCMOS 1.8V} \
   CONFIG.PCW_MIO_52_PULLUP {enabled} \
   CONFIG.PCW_MIO_52_SLEW {slow} \
   CONFIG.PCW_MIO_53_DIRECTION {inout} \
   CONFIG.PCW_MIO_53_IOTYPE {LVCMOS 1.8V} \
   CONFIG.PCW_MIO_53_PULLUP {enabled} \
   CONFIG.PCW_MIO_53_SLEW {slow} \
   CONFIG.PCW_MIO_5_DIRECTION {inout} \
   CONFIG.PCW_MIO_5_IOTYPE {LVCMOS 3.3V} \
   CONFIG.PCW_MIO_5_PULLUP {disabled} \
   CONFIG.PCW_MIO_5_SLEW {slow} \
   CONFIG.PCW_MIO_6_DIRECTION {out} \
   CONFIG.PCW_MIO_6_IOTYPE {LVCMOS 3.3V} \
   CONFIG.PCW_MIO_6_PULLUP {disabled} \
   CONFIG.PCW_MIO_6_SLEW {slow} \
   CONFIG.PCW_MIO_8_DIRECTION {out} \
   CONFIG.PCW_MIO_8_IOTYPE {LVCMOS 3.3V} \
   CONFIG.PCW_MIO_8_PULLUP {disabled} \
   CONFIG.PCW_MIO_8_SLEW {slow} \
   CONFIG.PCW_MIO_9_DIRECTION {in} \
   CONFIG.PCW_MIO_9_IOTYPE {LVCMOS 3.3V} \
   CONFIG.PCW_MIO_9_PULLUP {enabled} \
   CONFIG.PCW_MIO_9_SLEW {slow} \
   CONFIG.PCW_MIO_PRIMITIVE {54} \
   CONFIG.PCW_MIO_TREE_PERIPHERALS {unassigned#Quad SPI Flash#Quad SPI Flash#Quad SPI Flash#Quad SPI Flash#Quad SPI Flash#Quad SPI Flash#unassigned#UART 1#UART 1#UART 0#UART 0#I2C 1#I2C 1#I2C 0#I2C 0#Enet 0#Enet 0#Enet 0#Enet 0#Enet 0#Enet 0#Enet 0#Enet 0#Enet 0#Enet 0#Enet 0#Enet 0#unassigned#unassigned#unassigned#unassigned#unassigned#unassigned#unassigned#unassigned#unassigned#unassigned#unassigned#unassigned#SD 0#SD 0#SD 0#SD 0#SD 0#SD 0#unassigned#unassigned#unassigned#unassigned#unassigned#unassigned#Enet 0#Enet 0} \
   CONFIG.PCW_MIO_TREE_SIGNALS {unassigned#qspi0_ss_b#qspi0_io[0]#qspi0_io[1]#qspi0_io[2]#qspi0_io[3]/HOLD_B#qspi0_sclk#unassigned#tx#rx#rx#tx#scl#sda#scl#sda#tx_clk#txd[0]#txd[1]#txd[2]#txd[3]#tx_ctl#rx_clk#rxd[0]#rxd[1]#rxd[2]#rxd[3]#rx_ctl#unassigned#unassigned#unassigned#unassigned#unassigned#unassigned#unassigned#unassigned#unassigned#unassigned#unassigned#unassigned#clk#cmd#data[0]#data[1]#data[2]#data[3]#unassigned#unassigned#unassigned#unassigned#unassigned#unassigned#mdc#mdio} \
   CONFIG.PCW_M_AXI_GP0_ENABLE_STATIC_REMAP {0} \
   CONFIG.PCW_M_AXI_GP0_ID_WIDTH {12} \
   CONFIG.PCW_M_AXI_GP0_SUPPORT_NARROW_BURST {0} \
   CONFIG.PCW_M_AXI_GP0_THREAD_ID_WIDTH {12} \
   CONFIG.PCW_M_AXI_GP1_ENABLE_STATIC_REMAP {0} \
   CONFIG.PCW_M_AXI_GP1_ID_WIDTH {12} \
   CONFIG.PCW_M_AXI_GP1_SUPPORT_NARROW_BURST {0} \
   CONFIG.PCW_M_AXI_GP1_THREAD_ID_WIDTH {12} \
   CONFIG.PCW_NAND_CYCLES_T_AR {1} \
   CONFIG.PCW_NAND_CYCLES_T_CLR {1} \
   CONFIG.PCW_NAND_CYCLES_T_RC {11} \
   CONFIG.PCW_NAND_CYCLES_T_REA {1} \
   CONFIG.PCW_NAND_CYCLES_T_RR {1} \
   CONFIG.PCW_NAND_CYCLES_T_WC {11} \
   CONFIG.PCW_NAND_CYCLES_T_WP {1} \
   CONFIG.PCW_NAND_GRP_D8_ENABLE {0} \
   CONFIG.PCW_NAND_PERIPHERAL_ENABLE {0} \
   CONFIG.PCW_NOR_CS0_T_CEOE {1} \
   CONFIG.PCW_NOR_CS0_T_PC {1} \
   CONFIG.PCW_NOR_CS0_T_RC {11} \
   CONFIG.PCW_NOR_CS0_T_TR {1} \
   CONFIG.PCW_NOR_CS0_T_WC {11} \
   CONFIG.PCW_NOR_CS0_T_WP {1} \
   CONFIG.PCW_NOR_CS0_WE_TIME {0} \
   CONFIG.PCW_NOR_CS1_T_CEOE {1} \
   CONFIG.PCW_NOR_CS1_T_PC {1} \
   CONFIG.PCW_NOR_CS1_T_RC {11} \
   CONFIG.PCW_NOR_CS1_T_TR {1} \
   CONFIG.PCW_NOR_CS1_T_WC {11} \
   CONFIG.PCW_NOR_CS1_T_WP {1} \
   CONFIG.PCW_NOR_CS1_WE_TIME {0} \
   CONFIG.PCW_NOR_GRP_A25_ENABLE {0} \
   CONFIG.PCW_NOR_GRP_CS0_ENABLE {0} \
   CONFIG.PCW_NOR_GRP_CS1_ENABLE {0} \
   CONFIG.PCW_NOR_GRP_SRAM_CS0_ENABLE {0} \
   CONFIG.PCW_NOR_GRP_SRAM_CS1_ENABLE {0} \
   CONFIG.PCW_NOR_GRP_SRAM_INT_ENABLE {0} \
   CONFIG.PCW_NOR_PERIPHERAL_ENABLE {0} \
   CONFIG.PCW_NOR_SRAM_CS0_T_CEOE {1} \
   CONFIG.PCW_NOR_SRAM_CS0_T_PC {1} \
   CONFIG.PCW_NOR_SRAM_CS0_T_RC {11} \
   CONFIG.PCW_NOR_SRAM_CS0_T_TR {1} \
   CONFIG.PCW_NOR_SRAM_CS0_T_WC {11} \
   CONFIG.PCW_NOR_SRAM_CS0_T_WP {1} \
   CONFIG.PCW_NOR_SRAM_CS0_WE_TIME {0} \
   CONFIG.PCW_NOR_SRAM_CS1_T_CEOE {1} \
   CONFIG.PCW_NOR_SRAM_CS1_T_PC {1} \
   CONFIG.PCW_NOR_SRAM_CS1_T_RC {11} \
   CONFIG.PCW_NOR_SRAM_CS1_T_TR {1} \
   CONFIG.PCW_NOR_SRAM_CS1_T_WC {11} \
   CONFIG.PCW_NOR_SRAM_CS1_T_WP {1} \
   CONFIG.PCW_NOR_SRAM_CS1_WE_TIME {0} \
   CONFIG.PCW_OVERRIDE_BASIC_CLOCK {0} \
   CONFIG.PCW_P2F_CAN0_INTR {0} \
   CONFIG.PCW_P2F_CAN1_INTR {0} \
   CONFIG.PCW_P2F_CTI_INTR {0} \
   CONFIG.PCW_P2F_DMAC0_INTR {0} \
   CONFIG.PCW_P2F_DMAC1_INTR {0} \
   CONFIG.PCW_P2F_DMAC2_INTR {0} \
   CONFIG.PCW_P2F_DMAC3_INTR {0} \
   CONFIG.PCW_P2F_DMAC4_INTR {0} \
   CONFIG.PCW_P2F_DMAC5_INTR {0} \
   CONFIG.PCW_P2F_DMAC6_INTR {0} \
   CONFIG.PCW_P2F_DMAC7_INTR {0} \
   CONFIG.PCW_P2F_DMAC_ABORT_INTR {0} \
   CONFIG.PCW_P2F_ENET0_INTR {0} \
   CONFIG.PCW_P2F_ENET1_INTR {0} \
   CONFIG.PCW_P2F_GPIO_INTR {0} \
   CONFIG.PCW_P2F_I2C0_INTR {0} \
   CONFIG.PCW_P2F_I2C1_INTR {0} \
   CONFIG.PCW_P2F_QSPI_INTR {0} \
   CONFIG.PCW_P2F_SDIO0_INTR {0} \
   CONFIG.PCW_P2F_SDIO1_INTR {0} \
   CONFIG.PCW_P2F_SMC_INTR {0} \
   CONFIG.PCW_P2F_SPI0_INTR {0} \
   CONFIG.PCW_P2F_SPI1_INTR {0} \
   CONFIG.PCW_P2F_UART0_INTR {0} \
   CONFIG.PCW_P2F_UART1_INTR {0} \
   CONFIG.PCW_P2F_USB0_INTR {0} \
   CONFIG.PCW_P2F_USB1_INTR {0} \
   CONFIG.PCW_PACKAGE_DDR_BOARD_DELAY0 {0.101} \
   CONFIG.PCW_PACKAGE_DDR_BOARD_DELAY1 {0.097} \
   CONFIG.PCW_PACKAGE_DDR_BOARD_DELAY2 {0.102} \
   CONFIG.PCW_PACKAGE_DDR_BOARD_DELAY3 {0.106} \
   CONFIG.PCW_PACKAGE_DDR_DQS_TO_CLK_DELAY_0 {0.005} \
   CONFIG.PCW_PACKAGE_DDR_DQS_TO_CLK_DELAY_1 {0.016} \
   CONFIG.PCW_PACKAGE_DDR_DQS_TO_CLK_DELAY_2 {0.001} \
   CONFIG.PCW_PACKAGE_DDR_DQS_TO_CLK_DELAY_3 {-0.009} \
   CONFIG.PCW_PACKAGE_NAME {fbg676} \
   CONFIG.PCW_PCAP_PERIPHERAL_CLKSRC {IO PLL} \
   CONFIG.PCW_PCAP_PERIPHERAL_DIVISOR0 {5} \
   CONFIG.PCW_PCAP_PERIPHERAL_FREQMHZ {200} \
   CONFIG.PCW_PERIPHERAL_BOARD_PRESET {part0} \
   CONFIG.PCW_PJTAG_PERIPHERAL_ENABLE {0} \
   CONFIG.PCW_PLL_BYPASSMODE_ENABLE {0} \
   CONFIG.PCW_PRESET_BANK0_VOLTAGE {LVCMOS 3.3V} \
   CONFIG.PCW_PRESET_BANK1_VOLTAGE {LVCMOS 1.8V} \
   CONFIG.PCW_PS7_SI_REV {PRODUCTION} \
   CONFIG.PCW_QSPI_GRP_FBCLK_ENABLE {0} \
   CONFIG.PCW_QSPI_GRP_IO1_ENABLE {0} \
   CONFIG.PCW_QSPI_GRP_SINGLE_SS_ENABLE {1} \
   CONFIG.PCW_QSPI_GRP_SINGLE_SS_IO {MIO 1 .. 6} \
   CONFIG.PCW_QSPI_GRP_SS1_ENABLE {0} \
   CONFIG.PCW_QSPI_INTERNAL_HIGHADDRESS {0xFCFFFFFF} \
   CONFIG.PCW_QSPI_PERIPHERAL_CLKSRC {IO PLL} \
   CONFIG.PCW_QSPI_PERIPHERAL_DIVISOR0 {7} \
   CONFIG.PCW_QSPI_PERIPHERAL_ENABLE {1} \
   CONFIG.PCW_QSPI_PERIPHERAL_FREQMHZ {150} \
   CONFIG.PCW_QSPI_QSPI_IO {MIO 1 .. 6} \
   CONFIG.PCW_SD0_GRP_CD_ENABLE {0} \
   CONFIG.PCW_SD0_GRP_POW_ENABLE {0} \
   CONFIG.PCW_SD0_GRP_WP_ENABLE {0} \
   CONFIG.PCW_SD0_PERIPHERAL_ENABLE {1} \
   CONFIG.PCW_SD0_SD0_IO {MIO 40 .. 45} \
   CONFIG.PCW_SD1_GRP_CD_ENABLE {0} \
   CONFIG.PCW_SD1_GRP_POW_ENABLE {0} \
   CONFIG.PCW_SD1_GRP_WP_ENABLE {0} \
   CONFIG.PCW_SD1_PERIPHERAL_ENABLE {0} \
   CONFIG.PCW_SDIO0_BASEADDR {0xE0100000} \
   CONFIG.PCW_SDIO0_HIGHADDR {0xE0100FFF} \
   CONFIG.PCW_SDIO1_BASEADDR {0xE0101000} \
   CONFIG.PCW_SDIO1_HIGHADDR {0xE0101FFF} \
   CONFIG.PCW_SDIO_PERIPHERAL_CLKSRC {IO PLL} \
   CONFIG.PCW_SDIO_PERIPHERAL_DIVISOR0 {20} \
   CONFIG.PCW_SDIO_PERIPHERAL_FREQMHZ {50} \
   CONFIG.PCW_SDIO_PERIPHERAL_VALID {1} \
   CONFIG.PCW_SINGLE_QSPI_DATA_MODE {x4} \
   CONFIG.PCW_SMC_CYCLE_T0 {NA} \
   CONFIG.PCW_SMC_CYCLE_T1 {NA} \
   CONFIG.PCW_SMC_CYCLE_T2 {NA} \
   CONFIG.PCW_SMC_CYCLE_T3 {NA} \
   CONFIG.PCW_SMC_CYCLE_T4 {NA} \
   CONFIG.PCW_SMC_CYCLE_T5 {NA} \
   CONFIG.PCW_SMC_CYCLE_T6 {NA} \
   CONFIG.PCW_SMC_PERIPHERAL_CLKSRC {IO PLL} \
   CONFIG.PCW_SMC_PERIPHERAL_DIVISOR0 {1} \
   CONFIG.PCW_SMC_PERIPHERAL_FREQMHZ {100} \
   CONFIG.PCW_SMC_PERIPHERAL_VALID {0} \
   CONFIG.PCW_SPI0_BASEADDR {0xE0006000} \
   CONFIG.PCW_SPI0_GRP_SS0_ENABLE {0} \
   CONFIG.PCW_SPI0_GRP_SS1_ENABLE {0} \
   CONFIG.PCW_SPI0_GRP_SS2_ENABLE {0} \
   CONFIG.PCW_SPI0_HIGHADDR {0xE0006FFF} \
   CONFIG.PCW_SPI0_PERIPHERAL_ENABLE {0} \
   CONFIG.PCW_SPI1_BASEADDR {0xE0007000} \
   CONFIG.PCW_SPI1_GRP_SS0_ENABLE {0} \
   CONFIG.PCW_SPI1_GRP_SS1_ENABLE {0} \
   CONFIG.PCW_SPI1_GRP_SS2_ENABLE {0} \
   CONFIG.PCW_SPI1_HIGHADDR {0xE0007FFF} \
   CONFIG.PCW_SPI1_PERIPHERAL_ENABLE {0} \
   CONFIG.PCW_SPI_PERIPHERAL_CLKSRC {IO PLL} \
   CONFIG.PCW_SPI_PERIPHERAL_DIVISOR0 {1} \
   CONFIG.PCW_SPI_PERIPHERAL_FREQMHZ {166.666666} \
   CONFIG.PCW_SPI_PERIPHERAL_VALID {0} \
   CONFIG.PCW_S_AXI_ACP_ARUSER_VAL {31} \
   CONFIG.PCW_S_AXI_ACP_AWUSER_VAL {31} \
   CONFIG.PCW_S_AXI_ACP_ID_WIDTH {3} \
   CONFIG.PCW_S_AXI_GP0_ID_WIDTH {6} \
   CONFIG.PCW_S_AXI_GP1_ID_WIDTH {6} \
   CONFIG.PCW_S_AXI_HP0_DATA_WIDTH {64} \
   CONFIG.PCW_S_AXI_HP0_ID_WIDTH {6} \
   CONFIG.PCW_S_AXI_HP1_DATA_WIDTH {64} \
   CONFIG.PCW_S_AXI_HP1_ID_WIDTH {6} \
   CONFIG.PCW_S_AXI_HP2_DATA_WIDTH {64} \
   CONFIG.PCW_S_AXI_HP2_ID_WIDTH {6} \
   CONFIG.PCW_S_AXI_HP3_DATA_WIDTH {64} \
   CONFIG.PCW_S_AXI_HP3_ID_WIDTH {6} \
   CONFIG.PCW_TPIU_PERIPHERAL_CLKSRC {External} \
   CONFIG.PCW_TPIU_PERIPHERAL_DIVISOR0 {1} \
   CONFIG.PCW_TPIU_PERIPHERAL_FREQMHZ {200} \
   CONFIG.PCW_TRACE_BUFFER_CLOCK_DELAY {12} \
   CONFIG.PCW_TRACE_BUFFER_FIFO_SIZE {128} \
   CONFIG.PCW_TRACE_GRP_16BIT_ENABLE {0} \
   CONFIG.PCW_TRACE_GRP_2BIT_ENABLE {0} \
   CONFIG.PCW_TRACE_GRP_32BIT_ENABLE {0} \
   CONFIG.PCW_TRACE_GRP_4BIT_ENABLE {0} \
   CONFIG.PCW_TRACE_GRP_8BIT_ENABLE {0} \
   CONFIG.PCW_TRACE_INTERNAL_WIDTH {2} \
   CONFIG.PCW_TRACE_PERIPHERAL_ENABLE {0} \
   CONFIG.PCW_TRACE_PIPELINE_WIDTH {8} \
   CONFIG.PCW_TTC0_BASEADDR {0xE0104000} \
   CONFIG.PCW_TTC0_CLK0_PERIPHERAL_CLKSRC {CPU_1X} \
   CONFIG.PCW_TTC0_CLK0_PERIPHERAL_DIVISOR0 {1} \
   CONFIG.PCW_TTC0_CLK0_PERIPHERAL_FREQMHZ {133.333333} \
   CONFIG.PCW_TTC0_CLK1_PERIPHERAL_CLKSRC {CPU_1X} \
   CONFIG.PCW_TTC0_CLK1_PERIPHERAL_DIVISOR0 {1} \
   CONFIG.PCW_TTC0_CLK1_PERIPHERAL_FREQMHZ {133.333333} \
   CONFIG.PCW_TTC0_CLK2_PERIPHERAL_CLKSRC {CPU_1X} \
   CONFIG.PCW_TTC0_CLK2_PERIPHERAL_DIVISOR0 {1} \
   CONFIG.PCW_TTC0_CLK2_PERIPHERAL_FREQMHZ {133.333333} \
   CONFIG.PCW_TTC0_HIGHADDR {0xE0104fff} \
   CONFIG.PCW_TTC0_PERIPHERAL_ENABLE {0} \
   CONFIG.PCW_TTC1_BASEADDR {0xE0105000} \
   CONFIG.PCW_TTC1_CLK0_PERIPHERAL_CLKSRC {CPU_1X} \
   CONFIG.PCW_TTC1_CLK0_PERIPHERAL_DIVISOR0 {1} \
   CONFIG.PCW_TTC1_CLK0_PERIPHERAL_FREQMHZ {133.333333} \
   CONFIG.PCW_TTC1_CLK1_PERIPHERAL_CLKSRC {CPU_1X} \
   CONFIG.PCW_TTC1_CLK1_PERIPHERAL_DIVISOR0 {1} \
   CONFIG.PCW_TTC1_CLK1_PERIPHERAL_FREQMHZ {133.333333} \
   CONFIG.PCW_TTC1_CLK2_PERIPHERAL_CLKSRC {CPU_1X} \
   CONFIG.PCW_TTC1_CLK2_PERIPHERAL_DIVISOR0 {1} \
   CONFIG.PCW_TTC1_CLK2_PERIPHERAL_FREQMHZ {133.333333} \
   CONFIG.PCW_TTC1_HIGHADDR {0xE0105fff} \
   CONFIG.PCW_TTC1_PERIPHERAL_ENABLE {0} \
   CONFIG.PCW_TTC_PERIPHERAL_FREQMHZ {50} \
   CONFIG.PCW_UART0_BASEADDR {0xE0000000} \
   CONFIG.PCW_UART0_BAUD_RATE {115200} \
   CONFIG.PCW_UART0_GRP_FULL_ENABLE {0} \
   CONFIG.PCW_UART0_HIGHADDR {0xE0000FFF} \
   CONFIG.PCW_UART0_PERIPHERAL_ENABLE {1} \
   CONFIG.PCW_UART0_UART0_IO {MIO 10 .. 11} \
   CONFIG.PCW_UART1_BASEADDR {0xE0001000} \
   CONFIG.PCW_UART1_BAUD_RATE {115200} \
   CONFIG.PCW_UART1_GRP_FULL_ENABLE {0} \
   CONFIG.PCW_UART1_HIGHADDR {0xE0001FFF} \
   CONFIG.PCW_UART1_PERIPHERAL_ENABLE {1} \
   CONFIG.PCW_UART1_UART1_IO {MIO 8 .. 9} \
   CONFIG.PCW_UART_PERIPHERAL_CLKSRC {IO PLL} \
   CONFIG.PCW_UART_PERIPHERAL_DIVISOR0 {10} \
   CONFIG.PCW_UART_PERIPHERAL_FREQMHZ {100} \
   CONFIG.PCW_UART_PERIPHERAL_VALID {1} \
   CONFIG.PCW_UIPARAM_ACT_DDR_FREQ_MHZ {533.333374} \
   CONFIG.PCW_UIPARAM_DDR_ADV_ENABLE {0} \
   CONFIG.PCW_UIPARAM_DDR_AL {0} \
   CONFIG.PCW_UIPARAM_DDR_BANK_ADDR_COUNT {3} \
   CONFIG.PCW_UIPARAM_DDR_BOARD_DELAY0 {0.25} \
   CONFIG.PCW_UIPARAM_DDR_BOARD_DELAY1 {0.25} \
   CONFIG.PCW_UIPARAM_DDR_BOARD_DELAY2 {0.25} \
   CONFIG.PCW_UIPARAM_DDR_BOARD_DELAY3 {0.25} \
   CONFIG.PCW_UIPARAM_DDR_CL {7} \
   CONFIG.PCW_UIPARAM_DDR_CLOCK_0_LENGTH_MM {0} \
   CONFIG.PCW_UIPARAM_DDR_CLOCK_0_PACKAGE_LENGTH {102.799} \
   CONFIG.PCW_UIPARAM_DDR_CLOCK_0_PROPOGATION_DELAY {160} \
   CONFIG.PCW_UIPARAM_DDR_CLOCK_1_LENGTH_MM {0} \
   CONFIG.PCW_UIPARAM_DDR_CLOCK_1_PACKAGE_LENGTH {102.799} \
   CONFIG.PCW_UIPARAM_DDR_CLOCK_1_PROPOGATION_DELAY {160} \
   CONFIG.PCW_UIPARAM_DDR_CLOCK_2_LENGTH_MM {0} \
   CONFIG.PCW_UIPARAM_DDR_CLOCK_2_PACKAGE_LENGTH {102.799} \
   CONFIG.PCW_UIPARAM_DDR_CLOCK_2_PROPOGATION_DELAY {160} \
   CONFIG.PCW_UIPARAM_DDR_CLOCK_3_LENGTH_MM {0} \
   CONFIG.PCW_UIPARAM_DDR_CLOCK_3_PACKAGE_LENGTH {102.799} \
   CONFIG.PCW_UIPARAM_DDR_CLOCK_3_PROPOGATION_DELAY {160} \
   CONFIG.PCW_UIPARAM_DDR_CLOCK_STOP_EN {0} \
   CONFIG.PCW_UIPARAM_DDR_COL_ADDR_COUNT {10} \
   CONFIG.PCW_UIPARAM_DDR_CWL {6} \
   CONFIG.PCW_UIPARAM_DDR_DQS_0_LENGTH_MM {0} \
   CONFIG.PCW_UIPARAM_DDR_DQS_0_PACKAGE_LENGTH {97.8785} \
   CONFIG.PCW_UIPARAM_DDR_DQS_0_PROPOGATION_DELAY {160} \
   CONFIG.PCW_UIPARAM_DDR_DQS_1_LENGTH_MM {0} \
   CONFIG.PCW_UIPARAM_DDR_DQS_1_PACKAGE_LENGTH {86.7455} \
   CONFIG.PCW_UIPARAM_DDR_DQS_1_PROPOGATION_DELAY {160} \
   CONFIG.PCW_UIPARAM_DDR_DQS_2_LENGTH_MM {0} \
   CONFIG.PCW_UIPARAM_DDR_DQS_2_PACKAGE_LENGTH {102.1345} \
   CONFIG.PCW_UIPARAM_DDR_DQS_2_PROPOGATION_DELAY {160} \
   CONFIG.PCW_UIPARAM_DDR_DQS_3_LENGTH_MM {0} \
   CONFIG.PCW_UIPARAM_DDR_DQS_3_PACKAGE_LENGTH {111.4085} \
   CONFIG.PCW_UIPARAM_DDR_DQS_3_PROPOGATION_DELAY {160} \
   CONFIG.PCW_UIPARAM_DDR_DQS_TO_CLK_DELAY_0 {0.0} \
   CONFIG.PCW_UIPARAM_DDR_DQS_TO_CLK_DELAY_1 {0.0} \
   CONFIG.PCW_UIPARAM_DDR_DQS_TO_CLK_DELAY_2 {0.0} \
   CONFIG.PCW_UIPARAM_DDR_DQS_TO_CLK_DELAY_3 {0.0} \
   CONFIG.PCW_UIPARAM_DDR_DQ_0_LENGTH_MM {0} \
   CONFIG.PCW_UIPARAM_DDR_DQ_0_PACKAGE_LENGTH {99.127} \
   CONFIG.PCW_UIPARAM_DDR_DQ_0_PROPOGATION_DELAY {160} \
   CONFIG.PCW_UIPARAM_DDR_DQ_1_LENGTH_MM {0} \
   CONFIG.PCW_UIPARAM_DDR_DQ_1_PACKAGE_LENGTH {91.501} \
   CONFIG.PCW_UIPARAM_DDR_DQ_1_PROPOGATION_DELAY {160} \
   CONFIG.PCW_UIPARAM_DDR_DQ_2_LENGTH_MM {0} \
   CONFIG.PCW_UIPARAM_DDR_DQ_2_PACKAGE_LENGTH {100.241} \
   CONFIG.PCW_UIPARAM_DDR_DQ_2_PROPOGATION_DELAY {160} \
   CONFIG.PCW_UIPARAM_DDR_DQ_3_LENGTH_MM {0} \
   CONFIG.PCW_UIPARAM_DDR_DQ_3_PACKAGE_LENGTH {110.0845} \
   CONFIG.PCW_UIPARAM_DDR_DQ_3_PROPOGATION_DELAY {160} \
   CONFIG.PCW_UIPARAM_DDR_ENABLE {0} \
   CONFIG.PCW_UIPARAM_DDR_FREQ_MHZ {533.333} \
   CONFIG.PCW_UIPARAM_DDR_ROW_ADDR_COUNT {14} \
   CONFIG.PCW_UIPARAM_DDR_TRAIN_DATA_EYE {0} \
   CONFIG.PCW_UIPARAM_DDR_TRAIN_READ_GATE {0} \
   CONFIG.PCW_UIPARAM_DDR_TRAIN_WRITE_LEVEL {0} \
   CONFIG.PCW_UIPARAM_DDR_T_FAW {30.0} \
   CONFIG.PCW_UIPARAM_DDR_T_RAS_MIN {35.0} \
   CONFIG.PCW_UIPARAM_DDR_T_RC {48.75} \
   CONFIG.PCW_UIPARAM_DDR_T_RCD {7} \
   CONFIG.PCW_UIPARAM_DDR_T_RP {7} \
   CONFIG.PCW_UIPARAM_DDR_USE_INTERNAL_VREF {0} \
   CONFIG.PCW_UIPARAM_GENERATE_SUMMARY {NA} \
   CONFIG.PCW_USB0_BASEADDR {0xE0102000} \
   CONFIG.PCW_USB0_HIGHADDR {0xE0102fff} \
   CONFIG.PCW_USB0_PERIPHERAL_ENABLE {0} \
   CONFIG.PCW_USB0_PERIPHERAL_FREQMHZ {60} \
   CONFIG.PCW_USB0_RESET_ENABLE {0} \
   CONFIG.PCW_USB1_BASEADDR {0xE0103000} \
   CONFIG.PCW_USB1_HIGHADDR {0xE0103fff} \
   CONFIG.PCW_USB1_PERIPHERAL_ENABLE {0} \
   CONFIG.PCW_USB1_PERIPHERAL_FREQMHZ {60} \
   CONFIG.PCW_USB1_RESET_ENABLE {0} \
   CONFIG.PCW_USB_RESET_ENABLE {0} \
   CONFIG.PCW_USB_RESET_POLARITY {Active Low} \
   CONFIG.PCW_USE_AXI_FABRIC_IDLE {0} \
   CONFIG.PCW_USE_AXI_NONSECURE {0} \
   CONFIG.PCW_USE_CORESIGHT {0} \
   CONFIG.PCW_USE_CROSS_TRIGGER {0} \
   CONFIG.PCW_USE_CR_FABRIC {1} \
   CONFIG.PCW_USE_DDR_BYPASS {0} \
   CONFIG.PCW_USE_DEBUG {0} \
   CONFIG.PCW_USE_DEFAULT_ACP_USER_VAL {0} \
   CONFIG.PCW_USE_DMA0 {0} \
   CONFIG.PCW_USE_DMA1 {0} \
   CONFIG.PCW_USE_DMA2 {0} \
   CONFIG.PCW_USE_DMA3 {0} \
   CONFIG.PCW_USE_EXPANDED_IOP {0} \
   CONFIG.PCW_USE_EXPANDED_PS_SLCR_REGISTERS {0} \
   CONFIG.PCW_USE_FABRIC_INTERRUPT {0} \
   CONFIG.PCW_USE_HIGH_OCM {0} \
   CONFIG.PCW_USE_M_AXI_GP0 {1} \
   CONFIG.PCW_USE_M_AXI_GP1 {1} \
   CONFIG.PCW_USE_PROC_EVENT_BUS {0} \
   CONFIG.PCW_USE_PS_SLCR_REGISTERS {0} \
   CONFIG.PCW_USE_S_AXI_ACP {0} \
   CONFIG.PCW_USE_S_AXI_GP0 {0} \
   CONFIG.PCW_USE_S_AXI_GP1 {0} \
   CONFIG.PCW_USE_S_AXI_HP0 {0} \
   CONFIG.PCW_USE_S_AXI_HP1 {0} \
   CONFIG.PCW_USE_S_AXI_HP2 {0} \
   CONFIG.PCW_USE_S_AXI_HP3 {0} \
   CONFIG.PCW_USE_TRACE {0} \
   CONFIG.PCW_USE_TRACE_DATA_EDGE_DETECTOR {0} \
   CONFIG.PCW_VALUE_SILVERSION {3} \
   CONFIG.PCW_WDT_PERIPHERAL_CLKSRC {CPU_1X} \
   CONFIG.PCW_WDT_PERIPHERAL_DIVISOR0 {1} \
   CONFIG.PCW_WDT_PERIPHERAL_ENABLE {0} \
   CONFIG.PCW_WDT_PERIPHERAL_FREQMHZ {133.333333} \
 ] $processing_system7_0

  # Create instance: reset_fast, and set properties
  set reset_fast [ create_bd_cell -type ip -vlnv xilinx.com:ip:proc_sys_reset:5.0 reset_fast ]
  set_property -dict [ list \
   CONFIG.C_AUX_RST_WIDTH {1} \
   CONFIG.C_EXT_RST_WIDTH {1} \
   CONFIG.C_NUM_BUS_RST {1} \
   CONFIG.C_NUM_PERP_RST {1} \
 ] $reset_fast

  # Create instance: reset_slow, and set properties
  set reset_slow [ create_bd_cell -type ip -vlnv xilinx.com:ip:proc_sys_reset:5.0 reset_slow ]
  set_property -dict [ list \
   CONFIG.C_EXT_RST_WIDTH {1} \
 ] $reset_slow

  # Create interface connections
  connect_bd_intf_net -intf_net S00_AXI_0_1 [get_bd_intf_pins axi_interconnect_fast/S00_AXI] [get_bd_intf_pins processing_system7_0/M_AXI_GP0]
  connect_bd_intf_net -intf_net axi_interconnect_fast_M00_AXI [get_bd_intf_ports m_axi4l_control] [get_bd_intf_pins axi_interconnect_fast/M00_AXI]
  connect_bd_intf_net -intf_net axi_interconnect_fast_M01_AXI [get_bd_intf_ports m_axi4l_preproc] [get_bd_intf_pins axi_interconnect_fast/M01_AXI]
  connect_bd_intf_net -intf_net axi_interconnect_fast_M02_AXI [get_bd_intf_ports m_axi4l_delay] [get_bd_intf_pins axi_interconnect_fast/M02_AXI]
  connect_bd_intf_net -intf_net processing_system7_0_FIXED_IO [get_bd_intf_ports FIXED_IO_0] [get_bd_intf_pins processing_system7_0/FIXED_IO]
  connect_bd_intf_net -intf_net processing_system7_0_M_AXI_GP1 [get_bd_intf_pins AXI_slow/S00_AXI] [get_bd_intf_pins processing_system7_0/M_AXI_GP1]

  # Create port connections
  connect_bd_net -net ACLK_1 [get_bd_pins AXI_slow/ACLK] [get_bd_pins clk_fpga_divide/clk_out1] [get_bd_pins processing_system7_0/M_AXI_GP1_ACLK] [get_bd_pins reset_slow/slowest_sync_clk]
  connect_bd_net -net adc_FCO1lock_i_0_1 [get_bd_ports adc_FCO1lock_i] [get_bd_pins AXI_slow/adc_FCO1lock_i]
  connect_bd_net -net adc_FCO2lock_i_0_1 [get_bd_ports adc_FCO2lock_i] [get_bd_pins AXI_slow/adc_FCO2lock_i]
  connect_bd_net -net axi_spi_control_0_adc_sclk_o [get_bd_ports adc_sclk_o] [get_bd_pins AXI_slow/adc_sclk_o]
  connect_bd_net -net axi_spi_control_0_adc_sdio_o [get_bd_ports adc_sdio_o] [get_bd_pins AXI_slow/adc_sdio_o]
  connect_bd_net -net axi_spi_control_0_adc_ss1_o [get_bd_ports adc_ss1_o] [get_bd_pins AXI_slow/adc_ss1_o]
  connect_bd_net -net axi_spi_control_0_adc_ss2_o [get_bd_ports adc_ss2_o] [get_bd_pins AXI_slow/adc_ss2_o]
  connect_bd_net -net fmc_present_i_0_1 [get_bd_ports fmc_present_i] [get_bd_pins AXI_slow/fmc_present_i]
  connect_bd_net -net pin_control_0_led_dout0_o [get_bd_ports dout0_o] [get_bd_pins AXI_slow/dout0_o]
  connect_bd_net -net pin_control_0_led_dout1_o [get_bd_ports dout1_o] [get_bd_pins AXI_slow/dout1_o]
  connect_bd_net -net pin_control_0_led_green_o [get_bd_ports led_green_o] [get_bd_pins AXI_slow/led_green_o]
  connect_bd_net -net pin_control_0_led_red_o [get_bd_ports led_red_o] [get_bd_pins AXI_slow/led_red_o]
  connect_bd_net -net pin_control_0_vadj_en_o [get_bd_ports vadj_en_o] [get_bd_pins AXI_slow/vadj_en_o]
  connect_bd_net -net processing_system7_0_FCLK_CLK1 [get_bd_ports ps_clk_o] [get_bd_pins axi_interconnect_fast/ACLK] [get_bd_pins axi_interconnect_fast/M00_ACLK] [get_bd_pins axi_interconnect_fast/M01_ACLK] [get_bd_pins axi_interconnect_fast/M02_ACLK] [get_bd_pins axi_interconnect_fast/S00_ACLK] [get_bd_pins clk_fpga_divide/clk_in1] [get_bd_pins processing_system7_0/FCLK_CLK0] [get_bd_pins processing_system7_0/M_AXI_GP0_ACLK] [get_bd_pins reset_fast/slowest_sync_clk]
  connect_bd_net -net processing_system7_0_FCLK_RESET0_N [get_bd_pins processing_system7_0/FCLK_RESET0_N] [get_bd_pins reset_fast/ext_reset_in] [get_bd_pins reset_slow/ext_reset_in]
  connect_bd_net -net reset_fast_interconnect_aresetn [get_bd_ports ps_rst_n_o] [get_bd_pins axi_interconnect_fast/ARESETN] [get_bd_pins axi_interconnect_fast/M00_ARESETN] [get_bd_pins axi_interconnect_fast/M01_ARESETN] [get_bd_pins axi_interconnect_fast/M02_ARESETN] [get_bd_pins axi_interconnect_fast/S00_ARESETN] [get_bd_pins reset_fast/interconnect_aresetn]
  connect_bd_net -net reset_fast_peripheral_reset [get_bd_ports ps_rst_o] [get_bd_pins reset_fast/peripheral_reset]
  connect_bd_net -net reset_slow_interconnect_aresetn [get_bd_pins AXI_slow/ARESETN] [get_bd_pins reset_slow/interconnect_aresetn]

  # Create address segments
  assign_bd_address -offset 0x81E00000 -range 0x00010000 -target_address_space [get_bd_addr_spaces processing_system7_0/Data] [get_bd_addr_segs AXI_slow/axi_quad_spi_0/AXI_LITE/Reg] -force
  assign_bd_address -offset 0x43C00000 -range 0x00010000 -target_address_space [get_bd_addr_spaces processing_system7_0/Data] [get_bd_addr_segs m_axi4l_control/Reg] -force
  assign_bd_address -offset 0x43C10000 -range 0x00010000 -target_address_space [get_bd_addr_spaces processing_system7_0/Data] [get_bd_addr_segs m_axi4l_delay/Reg] -force
  assign_bd_address -offset 0x43C30000 -range 0x00010000 -target_address_space [get_bd_addr_spaces processing_system7_0/Data] [get_bd_addr_segs m_axi4l_preproc/Reg] -force
  assign_bd_address -offset 0x83C10000 -range 0x00010000 -target_address_space [get_bd_addr_spaces processing_system7_0/Data] [get_bd_addr_segs AXI_slow/pin_control_0/S_AXI/reg0] -force

  # Perform GUI Layout
  regenerate_bd_layout -layout_string {
   "ActiveEmotionalView":"Default View",
   "Default View_ScaleFactor":"1.21974",
   "Default View_TopLeft":"432,357",
   "ExpandedHierarchyInLayout":"",
   "guistr":"# # String gsaved with Nlview 7.0r4  2019-12-20 bk=1.5203 VDI=41 GEI=36 GUI=JA:10.0 TLS
#  -string -flagsOSRD
preplace port FIXED_IO_0 -pg 1 -lvl 4 -x 1000 -y 290 -defaultsOSRD
preplace port m_axi4l_control -pg 1 -lvl 4 -x 1000 -y 450 -defaultsOSRD
preplace port m_axi4l_delay -pg 1 -lvl 4 -x 1000 -y 510 -defaultsOSRD
preplace port m_axi4l_preproc -pg 1 -lvl 4 -x 1000 -y 480 -defaultsOSRD
preplace port adc_FCO1lock_i -pg 1 -lvl 0 -x -10 -y 160 -defaultsOSRD
preplace port adc_FCO2lock_i -pg 1 -lvl 0 -x -10 -y 190 -defaultsOSRD
preplace port adc_sclk_o -pg 1 -lvl 4 -x 1000 -y 20 -defaultsOSRD
preplace port adc_sdio_o -pg 1 -lvl 4 -x 1000 -y 50 -defaultsOSRD
preplace port dout0_o -pg 1 -lvl 4 -x 1000 -y 140 -defaultsOSRD
preplace port dout1_o -pg 1 -lvl 4 -x 1000 -y 170 -defaultsOSRD
preplace port fmc_present_i -pg 1 -lvl 0 -x -10 -y 220 -defaultsOSRD
preplace port led_green_o -pg 1 -lvl 4 -x 1000 -y 200 -defaultsOSRD
preplace port led_red_o -pg 1 -lvl 4 -x 1000 -y 230 -defaultsOSRD
preplace port ps_clk_o -pg 1 -lvl 4 -x 1000 -y 320 -defaultsOSRD
preplace port vadj_en_o -pg 1 -lvl 4 -x 1000 -y 260 -defaultsOSRD
preplace portBus adc_ss1_o -pg 1 -lvl 4 -x 1000 -y 80 -defaultsOSRD
preplace portBus adc_ss2_o -pg 1 -lvl 4 -x 1000 -y 110 -defaultsOSRD
preplace portBus ps_rst_n_o -pg 1 -lvl 4 -x 1000 -y 750 -defaultsOSRD
preplace portBus ps_rst_o -pg 1 -lvl 4 -x 1000 -y 720 -defaultsOSRD
preplace inst AXI_slow -pg 1 -lvl 3 -x 790 -y 160 -defaultsOSRD
preplace inst axi_interconnect_fast -pg 1 -lvl 3 -x 790 -y 480 -defaultsOSRD
preplace inst clk_fpga_divide -pg 1 -lvl 1 -x 110 -y 380 -defaultsOSRD
preplace inst processing_system7_0 -pg 1 -lvl 2 -x 410 -y 330 -defaultsOSRD
preplace inst reset_fast -pg 1 -lvl 2 -x 410 -y 720 -defaultsOSRD
preplace inst reset_slow -pg 1 -lvl 2 -x 410 -y 510 -defaultsOSRD
preplace netloc ACLK_1 1 1 2 200 130 NJ
preplace netloc adc_FCO1lock_i_0_1 1 0 3 NJ 160 NJ 160 640J
preplace netloc adc_FCO2lock_i_0_1 1 0 3 NJ 190 NJ 190 NJ
preplace netloc axi_spi_control_0_adc_sclk_o 1 3 1 940J 20n
preplace netloc axi_spi_control_0_adc_sdio_o 1 3 1 950J 50n
preplace netloc axi_spi_control_0_adc_ss1_o 1 3 1 960J 80n
preplace netloc axi_spi_control_0_adc_ss2_o 1 3 1 970J 110n
preplace netloc fmc_present_i_0_1 1 0 3 10J 210 NJ 210 NJ
preplace netloc pin_control_0_led_dout0_o 1 3 1 980J 140n
preplace netloc pin_control_0_led_dout1_o 1 3 1 960J 170n
preplace netloc pin_control_0_led_green_o 1 3 1 NJ 200
preplace netloc pin_control_0_led_red_o 1 3 1 960J 220n
preplace netloc pin_control_0_vadj_en_o 1 3 1 960J 240n
preplace netloc processing_system7_0_FCLK_CLK1 1 0 4 10 320 210 230 620 320 NJ
preplace netloc processing_system7_0_FCLK_RESET0_N 1 1 2 220 610 600
preplace netloc reset_fast_interconnect_aresetn 1 2 2 640 750 NJ
preplace netloc reset_fast_peripheral_reset 1 2 2 NJ 720 NJ
preplace netloc reset_slow_interconnect_aresetn 1 2 1 630 150n
preplace netloc axi_interconnect_fast_M01_AXI 1 3 1 NJ 480
preplace netloc axi_interconnect_fast_M00_AXI 1 3 1 960J 450n
preplace netloc S00_AXI_0_1 1 2 1 610 310n
preplace netloc processing_system7_0_M_AXI_GP1 1 2 1 600 110n
preplace netloc processing_system7_0_FIXED_IO 1 2 2 NJ 290 NJ
preplace netloc axi_interconnect_fast_M02_AXI 1 3 1 960J 500n
levelinfo -pg 1 -10 110 410 790 1000
pagesize -pg 1 -db -bbox -sgen -170 0 1160 820
"
}

  # Restore current instance
  current_bd_instance $oldCurInst

  validate_bd_design
  save_bd_design
  close_bd_design $design_name 
}
# End of cr_bd_ps_axi_spi_bd()
cr_bd_ps_axi_spi_bd ""
set_property REGISTERED_WITH_MANAGER "1" [get_files ps_axi_spi_bd.bd ] 
set_property SYNTH_CHECKPOINT_MODE "Hierarchical" [get_files ps_axi_spi_bd.bd ] 

if { [get_files dsp_dds_compiler_controller.vhd] == "" } {
  import_files -quiet -fileset sources_1 /run/media/fran/46FAA90DFAA8FA77/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/src/dsp/dsp_dds_compiler_controller.vhd
}
if { [get_files complex_conjugator.vhd] == "" } {
  import_files -quiet -fileset sources_1 /run/media/fran/46FAA90DFAA8FA77/Ventanas/IB/PI/GitHub/PIQuinteros/Fpga/src/hdl/complex_conjugator.vhd
}


# Proc to create BD ch_oscillator_bd
proc cr_bd_ch_oscillator_bd { parentCell } {
# The design that will be created by this Tcl proc contains the following 
# module references:
# complex_conjugator, dsp_dds_compiler_controller



  # CHANGE DESIGN NAME HERE
  set design_name ch_oscillator_bd

  common::send_gid_msg -ssname BD::TCL -id 2010 -severity "INFO" "Currently there is no design <$design_name> in project, so creating one..."

  create_bd_design $design_name

  set bCheckIPsPassed 1
  ##################################################################
  # CHECK IPs
  ##################################################################
  set bCheckIPs 1
  if { $bCheckIPs == 1 } {
     set list_check_ips "\ 
  xilinx.com:ip:dds_compiler:6.0\
  "

   set list_ips_missing ""
   common::send_gid_msg -ssname BD::TCL -id 2011 -severity "INFO" "Checking if the following IPs exist in the project's IP catalog: $list_check_ips ."

   foreach ip_vlnv $list_check_ips {
      set ip_obj [get_ipdefs -all $ip_vlnv]
      if { $ip_obj eq "" } {
         lappend list_ips_missing $ip_vlnv
      }
   }

   if { $list_ips_missing ne "" } {
      catch {common::send_gid_msg -ssname BD::TCL -id 2012 -severity "ERROR" "The following IPs are not found in the IP Catalog:\n  $list_ips_missing\n\nResolution: Please add the repository containing the IP(s) to the project." }
      set bCheckIPsPassed 0
   }

  }

  ##################################################################
  # CHECK Modules
  ##################################################################
  set bCheckModules 1
  if { $bCheckModules == 1 } {
     set list_check_mods "\ 
  complex_conjugator\
  dsp_dds_compiler_controller\
  "

   set list_mods_missing ""
   common::send_gid_msg -ssname BD::TCL -id 2020 -severity "INFO" "Checking if the following modules exist in the project's sources: $list_check_mods ."

   foreach mod_vlnv $list_check_mods {
      if { [can_resolve_reference $mod_vlnv] == 0 } {
         lappend list_mods_missing $mod_vlnv
      }
   }

   if { $list_mods_missing ne "" } {
      catch {common::send_gid_msg -ssname BD::TCL -id 2021 -severity "ERROR" "The following module(s) are not found in the project: $list_mods_missing" }
      common::send_gid_msg -ssname BD::TCL -id 2022 -severity "INFO" "Please add source files for the missing module(s) above."
      set bCheckIPsPassed 0
   }
}

  if { $bCheckIPsPassed != 1 } {
    common::send_gid_msg -ssname BD::TCL -id 2023 -severity "WARNING" "Will not continue with creation of design due to the error(s) above."
    return 3
  }

  
# Hierarchical cell: Ch_oscillator_hier
proc create_hier_cell_Ch_oscillator_hier { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2092 -severity "ERROR" "create_hier_cell_Ch_oscillator_hier() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins

  # Create pins
  create_bd_pin -dir I -type clk adc_clk
  create_bd_pin -dir I adc_rst_ni
  create_bd_pin -dir O -from 31 -to 0 m_axis_tdata
  create_bd_pin -dir O m_axis_tvalid
  create_bd_pin -dir I -from 31 -to 0 s_axis_config_tdata_0
  create_bd_pin -dir I s_axis_config_tvalid_0

  # Create instance: Ch_sel_osc_cont, and set properties
  set block_name dsp_dds_compiler_controller
  set block_cell_name Ch_sel_osc_cont
  if { [catch {set Ch_sel_osc_cont [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $Ch_sel_osc_cont eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.DATA_WIDTH {32} \
   CONFIG.DIVIDE_CLK_FREQ_BY {32} \
 ] $Ch_sel_osc_cont

  # Create instance: Channel_selector_oscillator, and set properties
  set Channel_selector_oscillator [ create_bd_cell -type ip -vlnv xilinx.com:ip:dds_compiler:6.0 Channel_selector_oscillator ]
  set_property -dict [ list \
   CONFIG.DATA_Has_TLAST {Not_Required} \
   CONFIG.DDS_Clock_Rate {260} \
   CONFIG.Frequency_Resolution {0.4} \
   CONFIG.Has_ARESETn {false} \
   CONFIG.Has_Phase_Out {false} \
   CONFIG.Has_TREADY {true} \
   CONFIG.Latency {13} \
   CONFIG.M_DATA_Has_TUSER {Not_Required} \
   CONFIG.Noise_Shaping {None} \
   CONFIG.Output_Frequency1 {0} \
   CONFIG.Output_Width {16} \
   CONFIG.PINC1 {11111100000011111100000100000} \
   CONFIG.Parameter_Entry {Hardware_Parameters} \
   CONFIG.Phase_Increment {Programmable} \
   CONFIG.Phase_Width {32} \
   CONFIG.S_PHASE_Has_TUSER {Not_Required} \
 ] $Channel_selector_oscillator

  # Create interface connections
  connect_bd_intf_net -intf_net Oscilador_local_M_AXIS_DATA_1 [get_bd_intf_pins Ch_sel_osc_cont/s_axis] [get_bd_intf_pins Channel_selector_oscillator/M_AXIS_DATA]

  # Create port connections
  connect_bd_net -net Ch_sel_osc_cont_m_axis_tdata [get_bd_pins m_axis_tdata] [get_bd_pins Ch_sel_osc_cont/m_axis_tdata]
  connect_bd_net -net Ch_sel_osc_cont_m_axis_tvalid [get_bd_pins m_axis_tvalid] [get_bd_pins Ch_sel_osc_cont/m_axis_tvalid]
  connect_bd_net -net aclk_0_1 [get_bd_pins adc_clk] [get_bd_pins Ch_sel_osc_cont/aclk] [get_bd_pins Channel_selector_oscillator/aclk]
  connect_bd_net -net rst_ni_0_1 [get_bd_pins adc_rst_ni] [get_bd_pins Ch_sel_osc_cont/rst_ni]
  connect_bd_net -net s_axis_config_tdata_0_1 [get_bd_pins s_axis_config_tdata_0] [get_bd_pins Channel_selector_oscillator/s_axis_config_tdata]
  connect_bd_net -net s_axis_config_tvalid_0_1 [get_bd_pins s_axis_config_tvalid_0] [get_bd_pins Channel_selector_oscillator/s_axis_config_tvalid]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  variable script_folder

  if { $parentCell eq "" } {
     set parentCell [get_bd_cells /]
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj


  # Create interface ports

  # Create ports
  set adc_clk_0 [ create_bd_port -dir I -type clk -freq_hz 260000000 adc_clk_0 ]
  set adc_rst_ni_0 [ create_bd_port -dir I adc_rst_ni_0 ]
  set config_sign_data_0 [ create_bd_port -dir I config_sign_data_0 ]
  set config_sign_valid_0 [ create_bd_port -dir I config_sign_valid_0 ]
  set m_axis_tdata_out_0 [ create_bd_port -dir O -from 31 -to 0 m_axis_tdata_out_0 ]
  set s_axis_config_tdata_0 [ create_bd_port -dir I -from 31 -to 0 s_axis_config_tdata_0 ]
  set s_axis_config_tvalid_0 [ create_bd_port -dir I s_axis_config_tvalid_0 ]

  # Create instance: Ch_oscillator_hier
  create_hier_cell_Ch_oscillator_hier [current_bd_instance .] Ch_oscillator_hier

  # Create instance: complex_conjugator_0, and set properties
  set block_name complex_conjugator
  set block_cell_name complex_conjugator_0
  if { [catch {set complex_conjugator_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $complex_conjugator_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.DATA_WIDTH {32} \
 ] $complex_conjugator_0

  # Create port connections
  connect_bd_net -net Ch_oscillator_hier_m_axis_tdata [get_bd_pins Ch_oscillator_hier/m_axis_tdata] [get_bd_pins complex_conjugator_0/s_axis_tdata_in]
  connect_bd_net -net Ch_oscillator_hier_m_axis_tvalid [get_bd_pins Ch_oscillator_hier/m_axis_tvalid] [get_bd_pins complex_conjugator_0/s_axis_tvalid_in]
  connect_bd_net -net adc_clk_0_1 [get_bd_ports adc_clk_0] [get_bd_pins Ch_oscillator_hier/adc_clk] [get_bd_pins complex_conjugator_0/sys_clk_i]
  connect_bd_net -net adc_rst_ni_0_1 [get_bd_ports adc_rst_ni_0] [get_bd_pins Ch_oscillator_hier/adc_rst_ni] [get_bd_pins complex_conjugator_0/sys_rst_ni]
  connect_bd_net -net complex_conjugator_0_m_axis_tdata_out [get_bd_ports m_axis_tdata_out_0] [get_bd_pins complex_conjugator_0/m_axis_tdata_out]
  connect_bd_net -net config_sign_data_0_1 [get_bd_ports config_sign_data_0] [get_bd_pins complex_conjugator_0/config_sign_data]
  connect_bd_net -net config_sign_valid_0_1 [get_bd_ports config_sign_valid_0] [get_bd_pins complex_conjugator_0/config_sign_valid]
  connect_bd_net -net s_axis_config_tdata_0_1 [get_bd_ports s_axis_config_tdata_0] [get_bd_pins Ch_oscillator_hier/s_axis_config_tdata_0]
  connect_bd_net -net s_axis_config_tvalid_0_1 [get_bd_ports s_axis_config_tvalid_0] [get_bd_pins Ch_oscillator_hier/s_axis_config_tvalid_0]

  # Create address segments

  # Perform GUI Layout
  regenerate_bd_layout -layout_string {
   "ActiveEmotionalView":"Default View",
   "Default View_ScaleFactor":"0.79037",
   "Default View_TopLeft":"-487,-218",
   "ExpandedHierarchyInLayout":"",
   "guistr":"# # String gsaved with Nlview 7.0r4  2019-12-20 bk=1.5203 VDI=41 GEI=36 GUI=JA:10.0 TLS
#  -string -flagsOSRD
preplace port adc_clk_0 -pg 1 -lvl 0 -x -460 -y 20 -defaultsOSRD
preplace port adc_rst_ni_0 -pg 1 -lvl 0 -x -460 -y 50 -defaultsOSRD
preplace port s_axis_config_tvalid_0 -pg 1 -lvl 0 -x -460 -y 110 -defaultsOSRD
preplace port config_sign_data_0 -pg 1 -lvl 0 -x -460 -y 270 -defaultsOSRD
preplace port config_sign_valid_0 -pg 1 -lvl 0 -x -460 -y 240 -defaultsOSRD
preplace portBus s_axis_config_tdata_0 -pg 1 -lvl 0 -x -460 -y 300 -defaultsOSRD
preplace portBus m_axis_tdata_out_0 -pg 1 -lvl 3 -x 1060 -y 220 -defaultsOSRD
preplace inst Ch_oscillator_hier -pg 1 -lvl 1 -x -120 -y 30 -defaultsOSRD
preplace inst complex_conjugator_0 -pg 1 -lvl 2 -x 820 -y 220 -defaultsOSRD
preplace netloc adc_clk_0_1 1 0 2 -410 220 N
preplace netloc adc_rst_ni_0_1 1 0 2 -400 240 N
preplace netloc s_axis_config_tdata_0_1 1 0 1 -430 40n
preplace netloc s_axis_config_tvalid_0_1 1 0 1 -420 60n
preplace netloc config_sign_data_0_1 1 0 2 NJ 270 70J
preplace netloc config_sign_valid_0_1 1 0 2 -440J 260 60J
preplace netloc Ch_oscillator_hier_m_axis_tdata 1 1 1 70 20n
preplace netloc Ch_oscillator_hier_m_axis_tvalid 1 1 1 60 40n
preplace netloc complex_conjugator_0_m_axis_tdata_out 1 2 1 1030 220n
levelinfo -pg 1 -460 -120 820 1060
pagesize -pg 1 -db -bbox -sgen -700 -60 1280 470
"
}

  # Restore current instance
  current_bd_instance $oldCurInst

  validate_bd_design
  save_bd_design
  close_bd_design $design_name 
}
# End of cr_bd_ch_oscillator_bd()
cr_bd_ch_oscillator_bd ""
set_property REGISTERED_WITH_MANAGER "1" [get_files ch_oscillator_bd.bd ] 
set_property SYNTH_CHECKPOINT_MODE "Hierarchical" [get_files ch_oscillator_bd.bd ] 

if { [get_files dsp_complex_gain.vhd] == "" } {
  import_files -quiet -fileset sources_1 /run/media/fran/46FAA90DFAA8FA77/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/src/dsp/dsp_complex_gain.vhd
}
if { [get_files axi_joiner.vhd] == "" } {
  import_files -quiet -fileset sources_1 /run/media/fran/46FAA90DFAA8FA77/Ventanas/IB/PI/GitHub/PIQuinteros/Fpga/src/hdl/axi_joiner.vhd
}
if { [get_files beam_mux_fsm.vhd] == "" } {
  import_files -quiet -fileset sources_1 /run/media/fran/46FAA90DFAA8FA77/Ventanas/IB/PI/GitHub/PIQuinteros/Fpga/src/hdl/beam_mux_fsm.vhd
}
if { [get_files axi_joiner.vhd] == "" } {
  import_files -quiet -fileset sources_1 /run/media/fran/46FAA90DFAA8FA77/Ventanas/IB/PI/GitHub/PIQuinteros/Fpga/src/hdl/axi_joiner.vhd
}


# Proc to create BD beam_handler_bd
proc cr_bd_beam_handler_bd { parentCell } {
# The design that will be created by this Tcl proc contains the following 
# module references:
# axi_joiner, axi_joiner, beam_mux_fsm, dsp_complex_gain



  # CHANGE DESIGN NAME HERE
  set design_name beam_handler_bd

  common::send_gid_msg -ssname BD::TCL -id 2010 -severity "INFO" "Currently there is no design <$design_name> in project, so creating one..."

  create_bd_design $design_name

  set bCheckIPsPassed 1
  ##################################################################
  # CHECK IPs
  ##################################################################
  set bCheckIPs 1
  if { $bCheckIPs == 1 } {
     set list_check_ips "\ 
  xilinx.com:ip:cmpy:6.0\
  xilinx.com:ip:fir_compiler:7.2\
  "

   set list_ips_missing ""
   common::send_gid_msg -ssname BD::TCL -id 2011 -severity "INFO" "Checking if the following IPs exist in the project's IP catalog: $list_check_ips ."

   foreach ip_vlnv $list_check_ips {
      set ip_obj [get_ipdefs -all $ip_vlnv]
      if { $ip_obj eq "" } {
         lappend list_ips_missing $ip_vlnv
      }
   }

   if { $list_ips_missing ne "" } {
      catch {common::send_gid_msg -ssname BD::TCL -id 2012 -severity "ERROR" "The following IPs are not found in the IP Catalog:\n  $list_ips_missing\n\nResolution: Please add the repository containing the IP(s) to the project." }
      set bCheckIPsPassed 0
   }

  }

  ##################################################################
  # CHECK Modules
  ##################################################################
  set bCheckModules 1
  if { $bCheckModules == 1 } {
     set list_check_mods "\ 
  axi_joiner\
  axi_joiner\
  beam_mux_fsm\
  dsp_complex_gain\
  "

   set list_mods_missing ""
   common::send_gid_msg -ssname BD::TCL -id 2020 -severity "INFO" "Checking if the following modules exist in the project's sources: $list_check_mods ."

   foreach mod_vlnv $list_check_mods {
      if { [can_resolve_reference $mod_vlnv] == 0 } {
         lappend list_mods_missing $mod_vlnv
      }
   }

   if { $list_mods_missing ne "" } {
      catch {common::send_gid_msg -ssname BD::TCL -id 2021 -severity "ERROR" "The following module(s) are not found in the project: $list_mods_missing" }
      common::send_gid_msg -ssname BD::TCL -id 2022 -severity "INFO" "Please add source files for the missing module(s) above."
      set bCheckIPsPassed 0
   }
}

  if { $bCheckIPsPassed != 1 } {
    common::send_gid_msg -ssname BD::TCL -id 2023 -severity "WARNING" "Will not continue with creation of design due to the error(s) above."
    return 3
  }

  
# Hierarchical cell: Ch_filter_hier
proc create_hier_cell_Ch_filter_hier { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2092 -severity "ERROR" "create_hier_cell_Ch_filter_hier() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins

  # Create pins
  create_bd_pin -dir I -type clk adc_clk
  create_bd_pin -dir I -from 31 -to 0 data_in
  create_bd_pin -dir O -from 31 -to 0 m_axis_data_tdata
  create_bd_pin -dir O -from 2 -to 0 m_axis_data_tuser
  create_bd_pin -dir O m_axis_data_tvalid
  create_bd_pin -dir I -from 2 -to 0 s_axis_data_tuser
  create_bd_pin -dir I s_axis_data_tvalid

  # Create instance: Channel_filter, and set properties
  set Channel_filter [ create_bd_cell -type ip -vlnv xilinx.com:ip:fir_compiler:7.2 Channel_filter ]
  set_property -dict [ list \
   CONFIG.Clock_Frequency {260} \
   CONFIG.CoefficientSource {COE_File} \
   CONFIG.Coefficient_File {../../../../../../../../../../Fpga/prj/preprocessing_stage/filters/lowpass.coe} \
   CONFIG.Coefficient_Fractional_Bits {20} \
   CONFIG.Coefficient_Reload {false} \
   CONFIG.Coefficient_Sets {1} \
   CONFIG.Coefficient_Sign {Signed} \
   CONFIG.Coefficient_Structure {Inferred} \
   CONFIG.Coefficient_Width {16} \
   CONFIG.ColumnConfig {1} \
   CONFIG.DATA_Has_TLAST {Not_Required} \
   CONFIG.Data_Fractional_Bits {0} \
   CONFIG.Data_Width {16} \
   CONFIG.Decimation_Rate {125} \
   CONFIG.Filter_Architecture {Systolic_Multiply_Accumulate} \
   CONFIG.Filter_Type {Decimation} \
   CONFIG.Interpolation_Rate {1} \
   CONFIG.M_DATA_Has_TUSER {Chan_ID_Field} \
   CONFIG.Number_Channels {5} \
   CONFIG.Number_Paths {2} \
   CONFIG.Output_Rounding_Mode {Truncate_LSBs} \
   CONFIG.Output_Width {16} \
   CONFIG.Quantization {Quantize_Only} \
   CONFIG.RateSpecification {Frequency_Specification} \
   CONFIG.S_DATA_Has_FIFO {true} \
   CONFIG.S_DATA_Has_TUSER {Chan_ID_Field} \
   CONFIG.Sample_Frequency {8.125} \
   CONFIG.Select_Pattern {All} \
   CONFIG.Zero_Pack_Factor {1} \
 ] $Channel_filter

  # Create instance: dsp_complex_gain_1, and set properties
  set block_name dsp_complex_gain
  set block_cell_name dsp_complex_gain_1
  if { [catch {set dsp_complex_gain_1 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $dsp_complex_gain_1 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.SHIFT_BY {2} \
 ] $dsp_complex_gain_1

  # Create port connections
  connect_bd_net -net Channel_filter_m_axis_data_tdata [get_bd_pins m_axis_data_tdata] [get_bd_pins Channel_filter/m_axis_data_tdata]
  connect_bd_net -net Channel_filter_m_axis_data_tuser [get_bd_pins m_axis_data_tuser] [get_bd_pins Channel_filter/m_axis_data_tuser]
  connect_bd_net -net Channel_filter_m_axis_data_tvalid [get_bd_pins m_axis_data_tvalid] [get_bd_pins Channel_filter/m_axis_data_tvalid]
  connect_bd_net -net Channel_mixer_m_axis_dout_tdata [get_bd_pins data_in] [get_bd_pins dsp_complex_gain_1/data_in]
  connect_bd_net -net Channel_mixer_m_axis_dout_tvalid [get_bd_pins s_axis_data_tvalid] [get_bd_pins Channel_filter/s_axis_data_tvalid]
  connect_bd_net -net aclk_0_1 [get_bd_pins adc_clk] [get_bd_pins Channel_filter/aclk]
  connect_bd_net -net dsp_complex_gain_1_data_out [get_bd_pins Channel_filter/s_axis_data_tdata] [get_bd_pins dsp_complex_gain_1/data_out]
  connect_bd_net -net s_axis_data_tuser_1 [get_bd_pins s_axis_data_tuser] [get_bd_pins Channel_filter/s_axis_data_tuser]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  variable script_folder

  if { $parentCell eq "" } {
     set parentCell [get_bd_cells /]
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj


  # Create interface ports

  # Create ports
  set arst_ni [ create_bd_port -dir I -type rst arst_ni ]
  set band_data_in [ create_bd_port -dir I -from 31 -to 0 band_data_in ]
  set band_valid_in [ create_bd_port -dir I band_valid_in ]
  set beam_filter_data_o [ create_bd_port -dir O -from 159 -to 0 beam_filter_data_o ]
  set beam_filter_valid_o [ create_bd_port -dir O -from 4 -to 0 beam_filter_valid_o ]
  set beam_mixers_data_o [ create_bd_port -dir O -from 159 -to 0 beam_mixers_data_o ]
  set beam_mixers_valid_o [ create_bd_port -dir O -from 4 -to 0 beam_mixers_valid_o ]
  set beams_data_in [ create_bd_port -dir I -from 159 -to 0 beams_data_in ]
  set sys_clk_i [ create_bd_port -dir I -type clk -freq_hz 10000000 sys_clk_i ]

  # Create instance: Ch_filter_hier
  create_hier_cell_Ch_filter_hier [current_bd_instance .] Ch_filter_hier

  # Create instance: axi_joiner_0, and set properties
  set block_name axi_joiner
  set block_cell_name axi_joiner_0
  if { [catch {set axi_joiner_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $axi_joiner_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: axi_joiner_1, and set properties
  set block_name axi_joiner
  set block_cell_name axi_joiner_1
  if { [catch {set axi_joiner_1 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $axi_joiner_1 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: beam_mux_fsm_0, and set properties
  set block_name beam_mux_fsm
  set block_cell_name beam_mux_fsm_0
  if { [catch {set beam_mux_fsm_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $beam_mux_fsm_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: cmpy_0, and set properties
  set cmpy_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:cmpy:6.0 cmpy_0 ]
  set_property -dict [ list \
   CONFIG.ARESETN {true} \
   CONFIG.ATUSERWidth {3} \
   CONFIG.BTUSERWidth {1} \
   CONFIG.HasATUSER {true} \
   CONFIG.HasBTUSER {false} \
   CONFIG.MinimumLatency {6} \
   CONFIG.MultType {Use_Mults} \
   CONFIG.OutputWidth {16} \
 ] $cmpy_0

  # Create port connections
  connect_bd_net -net Ch_filter_hier_m_axis_data_tdata [get_bd_pins Ch_filter_hier/m_axis_data_tdata] [get_bd_pins axi_joiner_0/s_axis_tdata]
  connect_bd_net -net Ch_filter_hier_m_axis_data_tuser [get_bd_pins Ch_filter_hier/m_axis_data_tuser] [get_bd_pins axi_joiner_0/s_axis_tuser]
  connect_bd_net -net Ch_filter_hier_m_axis_data_tvalid [get_bd_pins Ch_filter_hier/m_axis_data_tvalid] [get_bd_pins axi_joiner_0/s_axis_tvalid]
  connect_bd_net -net aclk_0_1 [get_bd_ports sys_clk_i] [get_bd_pins Ch_filter_hier/adc_clk] [get_bd_pins axi_joiner_0/clk_i] [get_bd_pins axi_joiner_1/clk_i] [get_bd_pins beam_mux_fsm_0/clk_i] [get_bd_pins cmpy_0/aclk]
  connect_bd_net -net aresetn_0_1 [get_bd_ports arst_ni] [get_bd_pins beam_mux_fsm_0/rst_ni] [get_bd_pins cmpy_0/aresetn]
  connect_bd_net -net axi_joiner_0_m_axis_tdata [get_bd_ports beam_filter_data_o] [get_bd_pins axi_joiner_0/m_axis_tdata]
  connect_bd_net -net axi_joiner_0_m_axis_tvalid [get_bd_ports beam_filter_valid_o] [get_bd_pins axi_joiner_0/m_axis_tvalid]
  connect_bd_net -net axi_joiner_1_m_axis_tdata [get_bd_ports beam_mixers_data_o] [get_bd_pins axi_joiner_1/m_axis_tdata]
  connect_bd_net -net axi_joiner_1_m_axis_tvalid [get_bd_ports beam_mixers_valid_o] [get_bd_pins axi_joiner_1/m_axis_tvalid]
  connect_bd_net -net beam_mux_fsm_0_beam_data_o [get_bd_pins beam_mux_fsm_0/beam_data_o] [get_bd_pins cmpy_0/s_axis_b_tdata]
  connect_bd_net -net beam_mux_fsm_0_m_axis_tdata [get_bd_pins beam_mux_fsm_0/m_axis_tdata] [get_bd_pins cmpy_0/s_axis_a_tdata]
  connect_bd_net -net beam_mux_fsm_0_m_axis_tuser [get_bd_pins beam_mux_fsm_0/m_axis_tuser] [get_bd_pins cmpy_0/s_axis_a_tuser]
  connect_bd_net -net beam_mux_fsm_0_m_axis_tvalid [get_bd_pins beam_mux_fsm_0/m_axis_tvalid] [get_bd_pins cmpy_0/s_axis_a_tvalid] [get_bd_pins cmpy_0/s_axis_b_tvalid]
  connect_bd_net -net beams_data_i_0_1 [get_bd_ports beams_data_in] [get_bd_pins beam_mux_fsm_0/beams_data_i]
  connect_bd_net -net cmpy_0_m_axis_dout_tdata [get_bd_pins Ch_filter_hier/data_in] [get_bd_pins axi_joiner_1/s_axis_tdata] [get_bd_pins cmpy_0/m_axis_dout_tdata]
  connect_bd_net -net cmpy_0_m_axis_dout_tuser [get_bd_pins Ch_filter_hier/s_axis_data_tuser] [get_bd_pins axi_joiner_1/s_axis_tuser] [get_bd_pins cmpy_0/m_axis_dout_tuser]
  connect_bd_net -net cmpy_0_m_axis_dout_tvalid [get_bd_pins Ch_filter_hier/s_axis_data_tvalid] [get_bd_pins axi_joiner_1/s_axis_tvalid] [get_bd_pins cmpy_0/m_axis_dout_tvalid]
  connect_bd_net -net s_axis_tdata_0_1 [get_bd_ports band_data_in] [get_bd_pins beam_mux_fsm_0/s_axis_tdata]
  connect_bd_net -net s_axis_tvalid_0_1 [get_bd_ports band_valid_in] [get_bd_pins beam_mux_fsm_0/s_axis_tvalid]

  # Create address segments

  # Perform GUI Layout
  regenerate_bd_layout -layout_string {
   "ActiveEmotionalView":"Default View",
   "Default View_ScaleFactor":"0.500724",
   "Default View_TopLeft":"-196,-523",
   "ExpandedHierarchyInLayout":"",
   "guistr":"# # String gsaved with Nlview 7.0r4  2019-12-20 bk=1.5203 VDI=41 GEI=36 GUI=JA:10.0 TLS
#  -string -flagsOSRD
preplace port sys_clk_i -pg 1 -lvl 0 -x 0 -y 130 -defaultsOSRD
preplace port arst_ni -pg 1 -lvl 0 -x 0 -y 160 -defaultsOSRD
preplace port band_valid_in -pg 1 -lvl 0 -x 0 -y 100 -defaultsOSRD
preplace portBus beams_data_in -pg 1 -lvl 0 -x 0 -y 190 -defaultsOSRD
preplace portBus band_data_in -pg 1 -lvl 0 -x 0 -y 70 -defaultsOSRD
preplace portBus beam_filter_data_o -pg 1 -lvl 5 -x 1640 -y 330 -defaultsOSRD
preplace portBus beam_filter_valid_o -pg 1 -lvl 5 -x 1640 -y 360 -defaultsOSRD
preplace portBus beam_mixers_data_o -pg 1 -lvl 5 -x 1640 -y 160 -defaultsOSRD
preplace portBus beam_mixers_valid_o -pg 1 -lvl 5 -x 1640 -y 190 -defaultsOSRD
preplace inst cmpy_0 -pg 1 -lvl 2 -x 630 -y 150 -defaultsOSRD
preplace inst Ch_filter_hier -pg 1 -lvl 3 -x 1040 -y 320 -defaultsOSRD
preplace inst axi_joiner_0 -pg 1 -lvl 4 -x 1430 -y 340 -defaultsOSRD
preplace inst beam_mux_fsm_0 -pg 1 -lvl 1 -x 230 -y 110 -defaultsOSRD
preplace inst axi_joiner_1 -pg 1 -lvl 4 -x 1430 -y 160 -defaultsOSRD
preplace netloc aclk_0_1 1 0 4 20 220 420 290 850 230 1230
preplace netloc aresetn_0_1 1 0 2 30 230 NJ
preplace netloc cmpy_0_m_axis_dout_tdata 1 2 2 860 140 N
preplace netloc cmpy_0_m_axis_dout_tvalid 1 2 2 830 180 N
preplace netloc cmpy_0_m_axis_dout_tuser 1 2 2 840 160 N
preplace netloc beams_data_i_0_1 1 0 1 40J 160n
preplace netloc s_axis_tdata_0_1 1 0 1 20J 70n
preplace netloc s_axis_tvalid_0_1 1 0 1 NJ 100
preplace netloc beam_mux_fsm_0_m_axis_tuser 1 1 1 N 110
preplace netloc beam_mux_fsm_0_m_axis_tdata 1 1 1 N 90
preplace netloc beam_mux_fsm_0_beam_data_o 1 1 1 420 150n
preplace netloc beam_mux_fsm_0_m_axis_tvalid 1 1 1 430 130n
preplace netloc Ch_filter_hier_m_axis_data_tvalid 1 3 1 1220 320n
preplace netloc Ch_filter_hier_m_axis_data_tdata 1 3 1 1240 300n
preplace netloc Ch_filter_hier_m_axis_data_tuser 1 3 1 N 340
preplace netloc axi_joiner_0_m_axis_tdata 1 4 1 1620J 330n
preplace netloc axi_joiner_0_m_axis_tvalid 1 4 1 NJ 360
preplace netloc axi_joiner_1_m_axis_tdata 1 4 1 NJ 160
preplace netloc axi_joiner_1_m_axis_tvalid 1 4 1 1620J 180n
levelinfo -pg 1 0 230 630 1040 1430 1640
pagesize -pg 1 -db -bbox -sgen -200 0 1880 440
"
}

  # Restore current instance
  current_bd_instance $oldCurInst

  validate_bd_design
  save_bd_design
  close_bd_design $design_name 
}
# End of cr_bd_beam_handler_bd()
cr_bd_beam_handler_bd ""
set_property REGISTERED_WITH_MANAGER "1" [get_files beam_handler_bd.bd ] 
set_property SYNTH_CHECKPOINT_MODE "Hierarchical" [get_files beam_handler_bd.bd ] 

if { [get_files dsp_complex_gain.vhd] == "" } {
  import_files -quiet -fileset sources_1 /run/media/fran/46FAA90DFAA8FA77/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/src/dsp/dsp_complex_gain.vhd
}
if { [get_files zero_padder.vhd] == "" } {
  import_files -quiet -fileset sources_1 /run/media/fran/46FAA90DFAA8FA77/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/src/helpers/zero_padder.vhd
}


# Proc to create BD band_processing_bd
proc cr_bd_band_processing_bd { parentCell } {
# The design that will be created by this Tcl proc contains the following 
# module references:
# zero_padder, dsp_complex_gain



  # CHANGE DESIGN NAME HERE
  set design_name band_processing_bd

  common::send_gid_msg -ssname BD::TCL -id 2010 -severity "INFO" "Currently there is no design <$design_name> in project, so creating one..."

  create_bd_design $design_name

  set bCheckIPsPassed 1
  ##################################################################
  # CHECK IPs
  ##################################################################
  set bCheckIPs 1
  if { $bCheckIPs == 1 } {
     set list_check_ips "\ 
  xilinx.com:ip:cmpy:6.0\
  xilinx.com:ip:fir_compiler:7.2\
  "

   set list_ips_missing ""
   common::send_gid_msg -ssname BD::TCL -id 2011 -severity "INFO" "Checking if the following IPs exist in the project's IP catalog: $list_check_ips ."

   foreach ip_vlnv $list_check_ips {
      set ip_obj [get_ipdefs -all $ip_vlnv]
      if { $ip_obj eq "" } {
         lappend list_ips_missing $ip_vlnv
      }
   }

   if { $list_ips_missing ne "" } {
      catch {common::send_gid_msg -ssname BD::TCL -id 2012 -severity "ERROR" "The following IPs are not found in the IP Catalog:\n  $list_ips_missing\n\nResolution: Please add the repository containing the IP(s) to the project." }
      set bCheckIPsPassed 0
   }

  }

  ##################################################################
  # CHECK Modules
  ##################################################################
  set bCheckModules 1
  if { $bCheckModules == 1 } {
     set list_check_mods "\ 
  zero_padder\
  dsp_complex_gain\
  "

   set list_mods_missing ""
   common::send_gid_msg -ssname BD::TCL -id 2020 -severity "INFO" "Checking if the following modules exist in the project's sources: $list_check_mods ."

   foreach mod_vlnv $list_check_mods {
      if { [can_resolve_reference $mod_vlnv] == 0 } {
         lappend list_mods_missing $mod_vlnv
      }
   }

   if { $list_mods_missing ne "" } {
      catch {common::send_gid_msg -ssname BD::TCL -id 2021 -severity "ERROR" "The following module(s) are not found in the project: $list_mods_missing" }
      common::send_gid_msg -ssname BD::TCL -id 2022 -severity "INFO" "Please add source files for the missing module(s) above."
      set bCheckIPsPassed 0
   }
}

  if { $bCheckIPsPassed != 1 } {
    common::send_gid_msg -ssname BD::TCL -id 2023 -severity "WARNING" "Will not continue with creation of design due to the error(s) above."
    return 3
  }

  
# Hierarchical cell: Band_filter_hier
proc create_hier_cell_Band_filter_hier { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2092 -severity "ERROR" "create_hier_cell_Band_filter_hier() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins

  # Create pins
  create_bd_pin -dir I -type clk adc_clk
  create_bd_pin -dir I -from 31 -to 0 data_in
  create_bd_pin -dir O -from 31 -to 0 m_axis_data_tdata
  create_bd_pin -dir O m_axis_data_tvalid
  create_bd_pin -dir I s_axis_data_tvalid

  # Create instance: Band_filter, and set properties
  set Band_filter [ create_bd_cell -type ip -vlnv xilinx.com:ip:fir_compiler:7.2 Band_filter ]
  set_property -dict [ list \
   CONFIG.Clock_Frequency {260} \
   CONFIG.CoefficientSource {COE_File} \
   CONFIG.Coefficient_File {../../../../../../../../../../Fpga/prj/preprocessing_stage/filters/bandpass.coe} \
   CONFIG.Coefficient_Fractional_Bits {19} \
   CONFIG.Coefficient_Sets {1} \
   CONFIG.Coefficient_Sign {Signed} \
   CONFIG.Coefficient_Structure {Inferred} \
   CONFIG.Coefficient_Width {16} \
   CONFIG.ColumnConfig {3} \
   CONFIG.Data_Fractional_Bits {0} \
   CONFIG.Data_Width {16} \
   CONFIG.Decimation_Rate {8} \
   CONFIG.Filter_Architecture {Systolic_Multiply_Accumulate} \
   CONFIG.Filter_Type {Decimation} \
   CONFIG.Interpolation_Rate {1} \
   CONFIG.Number_Channels {1} \
   CONFIG.Number_Paths {2} \
   CONFIG.Output_Rounding_Mode {Truncate_LSBs} \
   CONFIG.Output_Width {16} \
   CONFIG.Quantization {Quantize_Only} \
   CONFIG.RateSpecification {Frequency_Specification} \
   CONFIG.Sample_Frequency {65} \
   CONFIG.Zero_Pack_Factor {1} \
 ] $Band_filter

  # Create instance: dsp_complex_gain_0, and set properties
  set block_name dsp_complex_gain
  set block_cell_name dsp_complex_gain_0
  if { [catch {set dsp_complex_gain_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $dsp_complex_gain_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.SHIFT_BY {2} \
 ] $dsp_complex_gain_0

  # Create port connections
  connect_bd_net -net Band_filter_m_axis_data_tdata [get_bd_pins m_axis_data_tdata] [get_bd_pins Band_filter/m_axis_data_tdata]
  connect_bd_net -net Band_filter_m_axis_data_tvalid [get_bd_pins m_axis_data_tvalid] [get_bd_pins Band_filter/m_axis_data_tvalid]
  connect_bd_net -net Band_mixer_m_axis_dout_tdata [get_bd_pins data_in] [get_bd_pins dsp_complex_gain_0/data_in]
  connect_bd_net -net Band_mixer_m_axis_dout_tvalid [get_bd_pins s_axis_data_tvalid] [get_bd_pins Band_filter/s_axis_data_tvalid]
  connect_bd_net -net aclk_0_1 [get_bd_pins adc_clk] [get_bd_pins Band_filter/aclk]
  connect_bd_net -net dsp_complex_gain_0_data_out [get_bd_pins Band_filter/s_axis_data_tdata] [get_bd_pins dsp_complex_gain_0/data_out]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  variable script_folder

  if { $parentCell eq "" } {
     set parentCell [get_bd_cells /]
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj


  # Create interface ports

  # Create ports
  set adc_clk_0 [ create_bd_port -dir I -type clk -freq_hz 260000000 adc_clk_0 ]
  set adc_rst_ni_0 [ create_bd_port -dir I adc_rst_ni_0 ]
  set band_mixer_data_o [ create_bd_port -dir O -from 31 -to 0 band_mixer_data_o ]
  set band_mixer_valid_o [ create_bd_port -dir O band_mixer_valid_o ]
  set band_osc_in [ create_bd_port -dir I -from 31 -to 0 band_osc_in ]
  set data_mux_in [ create_bd_port -dir I -from 15 -to 0 data_mux_in ]
  set data_out [ create_bd_port -dir O -from 31 -to 0 data_out ]
  set valid_mux_in [ create_bd_port -dir I valid_mux_in ]
  set valid_out [ create_bd_port -dir O valid_out ]

  # Create instance: Band_filter_hier
  create_hier_cell_Band_filter_hier [current_bd_instance .] Band_filter_hier

  # Create instance: Band_mixer, and set properties
  set Band_mixer [ create_bd_cell -type ip -vlnv xilinx.com:ip:cmpy:6.0 Band_mixer ]
  set_property -dict [ list \
   CONFIG.ARESETN {true} \
   CONFIG.BPortWidth {16} \
   CONFIG.FlowControl {NonBlocking} \
   CONFIG.MinimumLatency {5} \
   CONFIG.MultType {Use_LUTs} \
   CONFIG.OptimizeGoal {Resources} \
   CONFIG.OutputWidth {16} \
   CONFIG.RoundMode {Truncate} \
 ] $Band_mixer

  # Create instance: zero_padder_0, and set properties
  set block_name zero_padder
  set block_cell_name zero_padder_0
  if { [catch {set zero_padder_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $zero_padder_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.LSB_PADDING {false} \
 ] $zero_padder_0

  # Create port connections
  connect_bd_net -net Band_filter_hier_m_axis_data_tdata [get_bd_ports data_out] [get_bd_pins Band_filter_hier/m_axis_data_tdata]
  connect_bd_net -net Band_filter_hier_m_axis_data_tvalid [get_bd_ports valid_out] [get_bd_pins Band_filter_hier/m_axis_data_tvalid]
  connect_bd_net -net Band_mixer_m_axis_dout_tdata [get_bd_ports band_mixer_data_o] [get_bd_pins Band_filter_hier/data_in] [get_bd_pins Band_mixer/m_axis_dout_tdata]
  connect_bd_net -net Band_mixer_m_axis_dout_tvalid [get_bd_ports band_mixer_valid_o] [get_bd_pins Band_filter_hier/s_axis_data_tvalid] [get_bd_pins Band_mixer/m_axis_dout_tvalid]
  connect_bd_net -net adc_clk_0_1 [get_bd_ports adc_clk_0] [get_bd_pins Band_filter_hier/adc_clk] [get_bd_pins Band_mixer/aclk]
  connect_bd_net -net adc_rst_ni_0_1 [get_bd_ports adc_rst_ni_0] [get_bd_pins Band_mixer/aresetn]
  connect_bd_net -net data_in_0_1 [get_bd_ports data_mux_in] [get_bd_pins zero_padder_0/data_in]
  connect_bd_net -net s_axis_a_tdata_0_1 [get_bd_ports band_osc_in] [get_bd_pins Band_mixer/s_axis_a_tdata]
  connect_bd_net -net s_axis_a_tvalid_0_1 [get_bd_ports valid_mux_in] [get_bd_pins Band_mixer/s_axis_a_tvalid] [get_bd_pins Band_mixer/s_axis_b_tvalid]
  connect_bd_net -net zero_padder_0_data_out [get_bd_pins Band_mixer/s_axis_b_tdata] [get_bd_pins zero_padder_0/data_out]

  # Create address segments


  # Restore current instance
  current_bd_instance $oldCurInst

  validate_bd_design
  save_bd_design
  close_bd_design $design_name 
}
# End of cr_bd_band_processing_bd()
cr_bd_band_processing_bd ""
set_property REGISTERED_WITH_MANAGER "1" [get_files band_processing_bd.bd ] 
set_property SYNTH_CHECKPOINT_MODE "Hierarchical" [get_files band_processing_bd.bd ] 

if { [get_files dsp_dds_compiler_controller.vhd] == "" } {
  import_files -quiet -fileset sources_1 /run/media/fran/46FAA90DFAA8FA77/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/src/dsp/dsp_dds_compiler_controller.vhd
}
if { [get_files basic_counter.vhd] == "" } {
  import_files -quiet -fileset sources_1 /run/media/fran/46FAA90DFAA8FA77/Ventanas/IB/PI/GitHub/Fpga/prj/preprocessing_stage/src/helpers/basic_counter.vhd
}
if { [get_files copy_vector_N_times.vhd] == "" } {
  import_files -quiet -fileset sources_1 /run/media/fran/46FAA90DFAA8FA77/Ventanas/IB/PI/GitHub/PIQuinteros/Fpga/src/hdl/copy_vector_N_times.vhd
}
if { [get_files copy_vector_N_times.vhd] == "" } {
  import_files -quiet -fileset sources_1 /run/media/fran/46FAA90DFAA8FA77/Ventanas/IB/PI/GitHub/PIQuinteros/Fpga/src/hdl/copy_vector_N_times.vhd
}
if { [get_files data_source_mux_generic.vhd] == "" } {
  import_files -quiet -fileset sources_1 /run/media/fran/46FAA90DFAA8FA77/Ventanas/IB/PI/GitHub/PIQuinteros/Fpga/src/hdl/data_source_mux_generic.vhd
}


# Proc to create BD preprocessing_setup_bd
proc cr_bd_preprocessing_setup_bd { parentCell } {
# The design that will be created by this Tcl proc contains the following 
# module references:
# basic_counter, copy_vec_N_times, copy_vec_N_times, data_source_mux_generic, dsp_dds_compiler_controller



  # CHANGE DESIGN NAME HERE
  set design_name preprocessing_setup_bd

  common::send_gid_msg -ssname BD::TCL -id 2010 -severity "INFO" "Currently there is no design <$design_name> in project, so creating one..."

  create_bd_design $design_name

  set bCheckIPsPassed 1
  ##################################################################
  # CHECK IPs
  ##################################################################
  set bCheckIPs 1
  if { $bCheckIPs == 1 } {
     set list_check_ips "\ 
  xilinx.com:ip:dds_compiler:6.0\
  "

   set list_ips_missing ""
   common::send_gid_msg -ssname BD::TCL -id 2011 -severity "INFO" "Checking if the following IPs exist in the project's IP catalog: $list_check_ips ."

   foreach ip_vlnv $list_check_ips {
      set ip_obj [get_ipdefs -all $ip_vlnv]
      if { $ip_obj eq "" } {
         lappend list_ips_missing $ip_vlnv
      }
   }

   if { $list_ips_missing ne "" } {
      catch {common::send_gid_msg -ssname BD::TCL -id 2012 -severity "ERROR" "The following IPs are not found in the IP Catalog:\n  $list_ips_missing\n\nResolution: Please add the repository containing the IP(s) to the project." }
      set bCheckIPsPassed 0
   }

  }

  ##################################################################
  # CHECK Modules
  ##################################################################
  set bCheckModules 1
  if { $bCheckModules == 1 } {
     set list_check_mods "\ 
  basic_counter\
  copy_vec_N_times\
  copy_vec_N_times\
  data_source_mux_generic\
  dsp_dds_compiler_controller\
  "

   set list_mods_missing ""
   common::send_gid_msg -ssname BD::TCL -id 2020 -severity "INFO" "Checking if the following modules exist in the project's sources: $list_check_mods ."

   foreach mod_vlnv $list_check_mods {
      if { [can_resolve_reference $mod_vlnv] == 0 } {
         lappend list_mods_missing $mod_vlnv
      }
   }

   if { $list_mods_missing ne "" } {
      catch {common::send_gid_msg -ssname BD::TCL -id 2021 -severity "ERROR" "The following module(s) are not found in the project: $list_mods_missing" }
      common::send_gid_msg -ssname BD::TCL -id 2022 -severity "INFO" "Please add source files for the missing module(s) above."
      set bCheckIPsPassed 0
   }
}

  if { $bCheckIPsPassed != 1 } {
    common::send_gid_msg -ssname BD::TCL -id 2023 -severity "WARNING" "Will not continue with creation of design due to the error(s) above."
    return 3
  }

  
# Hierarchical cell: Local_osc_hier
proc create_hier_cell_Local_osc_hier { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2092 -severity "ERROR" "create_hier_cell_Local_osc_hier() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins

  # Create pins
  create_bd_pin -dir I -type clk adc_clk
  create_bd_pin -dir I adc_rst_ni
  create_bd_pin -dir O -from 15 -to 0 m_axis_tdata
  create_bd_pin -dir O m_axis_tvalid
  create_bd_pin -dir I -from 31 -to 0 s_axis_config_tdata_0
  create_bd_pin -dir I s_axis_config_tvalid_0

  # Create instance: Local_oscillator, and set properties
  set Local_oscillator [ create_bd_cell -type ip -vlnv xilinx.com:ip:dds_compiler:6.0 Local_oscillator ]
  set_property -dict [ list \
   CONFIG.DATA_Has_TLAST {Not_Required} \
   CONFIG.DDS_Clock_Rate {260} \
   CONFIG.Frequency_Resolution {0.4} \
   CONFIG.Has_ARESETn {false} \
   CONFIG.Has_Phase_Out {false} \
   CONFIG.Has_TREADY {true} \
   CONFIG.Latency {13} \
   CONFIG.M_DATA_Has_TUSER {Not_Required} \
   CONFIG.Noise_Shaping {None} \
   CONFIG.Output_Frequency1 {0} \
   CONFIG.Output_Selection {Cosine} \
   CONFIG.Output_Width {16} \
   CONFIG.PINC1 {1001100110101101110000111101001} \
   CONFIG.Parameter_Entry {Hardware_Parameters} \
   CONFIG.Phase_Increment {Programmable} \
   CONFIG.Phase_Width {32} \
   CONFIG.S_PHASE_Has_TUSER {Not_Required} \
 ] $Local_oscillator

  # Create instance: dsp_dds_compiler_con_0, and set properties
  set block_name dsp_dds_compiler_controller
  set block_cell_name dsp_dds_compiler_con_0
  if { [catch {set dsp_dds_compiler_con_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $dsp_dds_compiler_con_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.DATA_WIDTH {16} \
 ] $dsp_dds_compiler_con_0

  # Create interface connections
  connect_bd_intf_net -intf_net Local_oscillator_M_AXIS_DATA [get_bd_intf_pins Local_oscillator/M_AXIS_DATA] [get_bd_intf_pins dsp_dds_compiler_con_0/s_axis]

  # Create port connections
  connect_bd_net -net aclk_0_1 [get_bd_pins adc_clk] [get_bd_pins Local_oscillator/aclk] [get_bd_pins dsp_dds_compiler_con_0/aclk]
  connect_bd_net -net dsp_dds_compiler_con_0_m_axis_tdata [get_bd_pins m_axis_tdata] [get_bd_pins dsp_dds_compiler_con_0/m_axis_tdata]
  connect_bd_net -net dsp_dds_compiler_con_0_m_axis_tvalid [get_bd_pins m_axis_tvalid] [get_bd_pins dsp_dds_compiler_con_0/m_axis_tvalid]
  connect_bd_net -net rst_ni_0_1 [get_bd_pins adc_rst_ni] [get_bd_pins dsp_dds_compiler_con_0/rst_ni]
  connect_bd_net -net s_axis_config_tdata_0_1 [get_bd_pins s_axis_config_tdata_0] [get_bd_pins Local_oscillator/s_axis_config_tdata]
  connect_bd_net -net s_axis_config_tvalid_0_1 [get_bd_pins s_axis_config_tvalid_0] [get_bd_pins Local_oscillator/s_axis_config_tvalid]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  variable script_folder

  if { $parentCell eq "" } {
     set parentCell [get_bd_cells /]
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj


  # Create interface ports

  # Create ports
  set adc_clk_0 [ create_bd_port -dir I -type clk adc_clk_0 ]
  set adc_rst_ni_0 [ create_bd_port -dir I adc_rst_ni_0 ]
  set control_in_0 [ create_bd_port -dir I -from 1 -to 0 control_in_0 ]
  set data_band_sel_osc [ create_bd_port -dir O -from 31 -to 0 data_band_sel_osc ]
  set m_axis_tdata_mux_o [ create_bd_port -dir O -from 255 -to 0 m_axis_tdata_mux_o ]
  set m_axis_tvalid_mux_o_0 [ create_bd_port -dir O -from 15 -to 0 m_axis_tvalid_mux_o_0 ]
  set s_axis_adc_tdata [ create_bd_port -dir I -from 255 -to 0 s_axis_adc_tdata ]
  set s_axis_adc_tvalid [ create_bd_port -dir I s_axis_adc_tvalid ]
  set s_axis_freq_config_tdata [ create_bd_port -dir I -from 31 -to 0 s_axis_freq_config_tdata ]
  set s_axis_freq_config_tvalid [ create_bd_port -dir I s_axis_freq_config_tvalid ]

  # Create instance: Band_selector_oscillator, and set properties
  set Band_selector_oscillator [ create_bd_cell -type ip -vlnv xilinx.com:ip:dds_compiler:6.0 Band_selector_oscillator ]
  set_property -dict [ list \
   CONFIG.Amplitude_Mode {Full_Range} \
   CONFIG.DATA_Has_TLAST {Not_Required} \
   CONFIG.DDS_Clock_Rate {260} \
   CONFIG.Frequency_Resolution {0.4} \
   CONFIG.Has_ARESETn {false} \
   CONFIG.Has_Phase_Out {false} \
   CONFIG.Has_TREADY {true} \
   CONFIG.Latency {9} \
   CONFIG.M_DATA_Has_TUSER {Not_Required} \
   CONFIG.Noise_Shaping {None} \
   CONFIG.Output_Frequency1 {0} \
   CONFIG.Output_Width {16} \
   CONFIG.PINC1 {1001000110111001000110111001001} \
   CONFIG.Parameter_Entry {Hardware_Parameters} \
   CONFIG.Phase_Increment {Fixed} \
   CONFIG.Phase_Width {32} \
   CONFIG.S_PHASE_Has_TUSER {Not_Required} \
 ] $Band_selector_oscillator

  # Create instance: Local_osc_hier
  create_hier_cell_Local_osc_hier [current_bd_instance .] Local_osc_hier

  # Create instance: basic_counter_0, and set properties
  set block_name basic_counter
  set block_cell_name basic_counter_0
  if { [catch {set basic_counter_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $basic_counter_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.DIVIDE_CLK_FREQ_BY {4} \
 ] $basic_counter_0

  # Create instance: copy_counter_N_times, and set properties
  set block_name copy_vec_N_times
  set block_cell_name copy_counter_N_times
  if { [catch {set copy_counter_N_times [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $copy_counter_N_times eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.DATA_WIDTH {16} \
   CONFIG.N {16} \
 ] $copy_counter_N_times

  # Create instance: copy_local_osc_N_times, and set properties
  set block_name copy_vec_N_times
  set block_cell_name copy_local_osc_N_times
  if { [catch {set copy_local_osc_N_times [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $copy_local_osc_N_times eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.DATA_WIDTH {16} \
   CONFIG.N {16} \
 ] $copy_local_osc_N_times

  # Create instance: data_source_mux_gene_0, and set properties
  set block_name data_source_mux_generic
  set block_cell_name data_source_mux_gene_0
  if { [catch {set data_source_mux_gene_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $data_source_mux_gene_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.VEC_LEN {16} \
 ] $data_source_mux_gene_0

  # Create port connections
  connect_bd_net -net Band_selector_oscillator_m_axis_data_tdata [get_bd_ports data_band_sel_osc] [get_bd_pins Band_selector_oscillator/m_axis_data_tdata]
  connect_bd_net -net Local_osc_hier_m_axis_tdata [get_bd_pins Local_osc_hier/m_axis_tdata] [get_bd_pins copy_local_osc_N_times/s_axis_tdata_in]
  connect_bd_net -net Local_osc_hier_m_axis_tvalid [get_bd_pins Local_osc_hier/m_axis_tvalid] [get_bd_pins copy_local_osc_N_times/s_axis_tvalid_in]
  connect_bd_net -net adc_clk_0_2 [get_bd_ports adc_clk_0] [get_bd_pins Band_selector_oscillator/aclk] [get_bd_pins Local_osc_hier/adc_clk] [get_bd_pins basic_counter_0/clk_i] [get_bd_pins copy_counter_N_times/sys_clk_i] [get_bd_pins copy_local_osc_N_times/sys_clk_i] [get_bd_pins data_source_mux_gene_0/sys_clk_i]
  connect_bd_net -net adc_rst_ni_0_1 [get_bd_ports adc_rst_ni_0] [get_bd_pins Local_osc_hier/adc_rst_ni] [get_bd_pins basic_counter_0/rst_ni] [get_bd_pins copy_counter_N_times/sys_rst_ni] [get_bd_pins copy_local_osc_N_times/sys_rst_ni] [get_bd_pins data_source_mux_gene_0/sys_rst_ni]
  connect_bd_net -net adc_tdata_0_1 [get_bd_ports s_axis_adc_tdata] [get_bd_pins data_source_mux_gene_0/adc_tdata]
  connect_bd_net -net adc_tvalid_0_1 [get_bd_ports s_axis_adc_tvalid] [get_bd_pins data_source_mux_gene_0/adc_tvalid]
  connect_bd_net -net basic_counter_0_m_axis_tdata [get_bd_pins basic_counter_0/m_axis_tdata] [get_bd_pins copy_counter_N_times/s_axis_tdata_in]
  connect_bd_net -net basic_counter_0_m_axis_tvalid [get_bd_pins basic_counter_0/m_axis_tvalid] [get_bd_pins copy_counter_N_times/s_axis_tvalid_in]
  connect_bd_net -net control_in_0_1 [get_bd_ports control_in_0] [get_bd_pins data_source_mux_gene_0/control_in]
  connect_bd_net -net copy_counter_N_times_m_axis_tdata_out [get_bd_pins copy_counter_N_times/m_axis_tdata_out] [get_bd_pins data_source_mux_gene_0/counter_tdata]
  connect_bd_net -net copy_counter_N_times_m_axis_tvalid_out [get_bd_pins copy_counter_N_times/m_axis_tvalid_out] [get_bd_pins data_source_mux_gene_0/counter_tvalid]
  connect_bd_net -net copy_local_osc_N_times_m_axis_tdata_out [get_bd_pins copy_local_osc_N_times/m_axis_tdata_out] [get_bd_pins data_source_mux_gene_0/dds_compiler_tdata]
  connect_bd_net -net copy_local_osc_N_times_m_axis_tvalid_out [get_bd_pins copy_local_osc_N_times/m_axis_tvalid_out] [get_bd_pins data_source_mux_gene_0/dds_compiler_tvalid]
  connect_bd_net -net data_source_mux_gene_0_m_axis_tdata_o [get_bd_ports m_axis_tdata_mux_o] [get_bd_pins data_source_mux_gene_0/m_axis_tdata_o]
  connect_bd_net -net data_source_mux_gene_0_m_axis_tvalid_o [get_bd_ports m_axis_tvalid_mux_o_0] [get_bd_pins Band_selector_oscillator/m_axis_data_tready] [get_bd_pins data_source_mux_gene_0/m_axis_tvalid_o]
  connect_bd_net -net s_axis_config_tdata_0_1 [get_bd_ports s_axis_freq_config_tdata] [get_bd_pins Local_osc_hier/s_axis_config_tdata_0]
  connect_bd_net -net s_axis_config_tvalid_0_1 [get_bd_ports s_axis_freq_config_tvalid] [get_bd_pins Local_osc_hier/s_axis_config_tvalid_0]

  # Create address segments


  # Restore current instance
  current_bd_instance $oldCurInst

  validate_bd_design
  save_bd_design
  close_bd_design $design_name 
}
# End of cr_bd_preprocessing_setup_bd()
cr_bd_preprocessing_setup_bd ""
set_property GENERATE_SYNTH_CHECKPOINT "0" [get_files preprocessing_setup_bd.bd ] 
set_property REGISTERED_WITH_MANAGER "1" [get_files preprocessing_setup_bd.bd ] 

# Create 'synth_1' run (if not found)
if {[string equal [get_runs -quiet synth_1] ""]} {
    create_run -name synth_1 -part xc7z030fbg676-2 -flow {Vivado Synthesis 2019} -strategy "Vivado Synthesis Defaults" -report_strategy {No Reports} -constrset constrs_1
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs synth_1]
  set_property flow "Vivado Synthesis 2019" [get_runs synth_1]
}
set obj [get_runs synth_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Synthesis Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'synth_1_synth_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs synth_1] synth_1_synth_report_utilization_0] "" ] } {
  create_report_config -report_name synth_1_synth_report_utilization_0 -report_type report_utilization:1.0 -steps synth_design -runs synth_1
}
set obj [get_report_configs -of_objects [get_runs synth_1] synth_1_synth_report_utilization_0]
if { $obj != "" } {

}
set obj [get_runs synth_1]
set_property -name "needs_refresh" -value "1" -objects $obj
set_property -name "auto_incremental_checkpoint.directory" -value "/home/fran/C:/home/fran/C:/home/fran/C:/Ventanas/IB/PI/GitHub/PIQuinteros/Fpga/vivado_projects/ciaa_sistadq_x16_proj/CIAA_SistAdq_x16.srcs/utils_1/imports/synth_1" -objects $obj
set_property -name "strategy" -value "Vivado Synthesis Defaults" -objects $obj

# set the current synth run
current_run -synthesis [get_runs synth_1]

# Create 'impl_1' run (if not found)
if {[string equal [get_runs -quiet impl_1] ""]} {
    create_run -name impl_1 -part xc7z030fbg676-2 -flow {Vivado Implementation 2019} -strategy "Vivado Implementation Defaults" -report_strategy {No Reports} -constrset constrs_1 -parent_run synth_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs impl_1]
  set_property flow "Vivado Implementation 2019" [get_runs impl_1]
}
set obj [get_runs impl_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'impl_1_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_1_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_io_0] "" ] } {
  create_report_config -report_name impl_1_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_io_0]
if { $obj != "" } {

}
# Create 'impl_1_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_utilization_0] "" ] } {
  create_report_config -report_name impl_1_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_utilization_0]
if { $obj != "" } {

}
# Create 'impl_1_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_control_sets_0] "" ] } {
  create_report_config -report_name impl_1_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_control_sets_0]
if { $obj != "" } {
set_property -name "options.verbose" -value "1" -objects $obj

}
# Create 'impl_1_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name impl_1_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_methodology_0] "" ] } {
  create_report_config -report_name impl_1_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_methodology_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_power_0] "" ] } {
  create_report_config -report_name impl_1_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_power_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_route_status_0] "" ] } {
  create_report_config -report_name impl_1_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_route_status_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_incremental_reuse_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name impl_1_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_clock_utilization_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_1_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_1_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
set obj [get_runs impl_1]
set_property -name "needs_refresh" -value "1" -objects $obj
set_property -name "auto_incremental_checkpoint.directory" -value "/home/fran/C:/home/fran/C:/home/fran/C:/Ventanas/IB/PI/GitHub/PIQuinteros/Fpga/vivado_projects/ciaa_sistadq_x16_proj/CIAA_SistAdq_x16.srcs/utils_1/imports/impl_1" -objects $obj
set_property -name "strategy" -value "Vivado Implementation Defaults" -objects $obj
set_property -name "steps.phys_opt_design.is_enabled" -value "1" -objects $obj
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj

# set the current impl run
current_run -implementation [get_runs impl_1]

puts "INFO: Project created:${_xil_proj_name_}"
# Create 'drc_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "drc_1" ] ] ""]} {
create_dashboard_gadget -name {drc_1} -type drc
}
set obj [get_dashboard_gadgets [ list "drc_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_drc_0" -objects $obj

# Create 'methodology_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "methodology_1" ] ] ""]} {
create_dashboard_gadget -name {methodology_1} -type methodology
}
set obj [get_dashboard_gadgets [ list "methodology_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_methodology_0" -objects $obj

# Create 'power_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "power_1" ] ] ""]} {
create_dashboard_gadget -name {power_1} -type power
}
set obj [get_dashboard_gadgets [ list "power_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_power_0" -objects $obj

# Create 'timing_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "timing_1" ] ] ""]} {
create_dashboard_gadget -name {timing_1} -type timing
}
set obj [get_dashboard_gadgets [ list "timing_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_timing_summary_0" -objects $obj

# Create 'utilization_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "utilization_1" ] ] ""]} {
create_dashboard_gadget -name {utilization_1} -type utilization
}
set obj [get_dashboard_gadgets [ list "utilization_1" ] ]
set_property -name "reports" -value "synth_1#synth_1_synth_report_utilization_0" -objects $obj
set_property -name "run.step" -value "synth_design" -objects $obj
set_property -name "run.type" -value "synthesis" -objects $obj

# Create 'utilization_2' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "utilization_2" ] ] ""]} {
create_dashboard_gadget -name {utilization_2} -type utilization
}
set obj [get_dashboard_gadgets [ list "utilization_2" ] ]
set_property -name "reports" -value "impl_1#impl_1_place_report_utilization_0" -objects $obj

move_dashboard_gadget -name {utilization_1} -row 0 -col 0
move_dashboard_gadget -name {power_1} -row 1 -col 0
move_dashboard_gadget -name {drc_1} -row 2 -col 0
move_dashboard_gadget -name {timing_1} -row 0 -col 1
move_dashboard_gadget -name {utilization_2} -row 1 -col 1
move_dashboard_gadget -name {methodology_1} -row 2 -col 1
